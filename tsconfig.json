{
  // TypeScript 编译器配置 - 定义类型检查和编译行为
  "compilerOptions": {
    // 🎯 编译目标和库配置
    "target": "es5", // 编译目标：ES5（兼容性最佳）
    "lib": ["dom", "dom.iterable", "es6"], // 包含的类型库：DOM API + ES6
    
    // 📁 模块和文件处理
    "allowJs": true, // 允许编译JavaScript文件
    "skipLibCheck": true, // 跳过声明文件的类型检查（提升性能）
    "resolveJsonModule": true, // 允许导入JSON文件
    "isolatedModules": true, // 确保每个文件都能独立编译
    
    // 🔍 类型检查配置
    "strict": true, // 启用所有严格类型检查选项
    "noEmit": true, // 不生成输出文件（Next.js自行处理）
    
    // 🔗 模块系统配置
    "esModuleInterop": true, // 启用ES模块互操作性
    "module": "esnext", // 模块系统：最新ES模块
    "moduleResolution": "bundler", // 模块解析策略：打包器模式
    
    // ⚛️ React/JSX配置
    "jsx": "preserve", // 保留JSX（由Next.js处理）
    
    // ⚡ 性能优化
    "incremental": true, // 启用增量编译
    // 🔌 插件配置
    "plugins": [
      {
        "name": "next" // Next.js TypeScript插件
      }
    ],
    // 📂 路径映射配置 - 简化导入路径
    "baseUrl": ".", // 基础路径：项目根目录
    "paths": {
      "@/*": ["./src/*"], // @/ 映射到 src/ 目录
      "@/components/*": ["./src/components/*"], // 组件路径别名
      "@/lib/*": ["./src/lib/*"], // 工具库路径别名
      "@/types/*": ["./src/types/*"] // 类型定义路径别名
    }
  },
  // 📋 包含的文件 - 指定TypeScript处理的文件
  "include": [
    "next-env.d.ts", // Next.js环境类型定义
    "**/*.ts", // 所有TypeScript文件
    "**/*.tsx", // 所有TypeScript React文件
    ".next/types/**/*.ts" // Next.js生成的类型文件
  ],
  // 🚫 排除的文件 - 不进行类型检查的目录
  "exclude": ["node_modules"] // 排除依赖包目录
}