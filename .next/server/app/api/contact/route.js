"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/contact/route";
exports.ids = ["app/api/contact/route"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontact%2Froute&page=%2Fapi%2Fcontact%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontact%2Froute.ts&appDir=E%3A%5Cnanuk%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cnanuk&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontact%2Froute&page=%2Fapi%2Fcontact%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontact%2Froute.ts&appDir=E%3A%5Cnanuk%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cnanuk&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var E_nanuk_src_app_api_contact_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/contact/route.ts */ \"(rsc)/./src/app/api/contact/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/contact/route\",\n        pathname: \"/api/contact\",\n        filename: \"route\",\n        bundlePath: \"app/api/contact/route\"\n    },\n    resolvedPagePath: \"E:\\\\nanuk\\\\src\\\\app\\\\api\\\\contact\\\\route.ts\",\n    nextConfigOutput,\n    userland: E_nanuk_src_app_api_contact_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/contact/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjb250YWN0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjb250YWN0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY29udGFjdCUyRnJvdXRlLnRzJmFwcERpcj1FJTNBJTVDbmFudWslNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUUlM0ElNUNuYW51ayZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDTDtBQUN4RTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlbGwtbGktY2FzZXMvPzg4NzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRTpcXFxcbmFudWtcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcY29udGFjdFxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY29udGFjdC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NvbnRhY3RcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2NvbnRhY3Qvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJFOlxcXFxuYW51a1xcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxjb250YWN0XFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9jb250YWN0L3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontact%2Froute&page=%2Fapi%2Fcontact%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontact%2Froute.ts&appDir=E%3A%5Cnanuk%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cnanuk&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/contact/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/contact/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! nodemailer */ \"(rsc)/./node_modules/nodemailer/lib/nodemailer.js\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n/* harmony import */ var _lib_models__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/models */ \"(rsc)/./src/lib/models.ts\");\n/* harmony import */ var _lib_error_handler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/error-handler */ \"(rsc)/./src/lib/error-handler.ts\");\n/* harmony import */ var _lib_rate_limiter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/rate-limiter */ \"(rsc)/./src/lib/rate-limiter.ts\");\n// 【重点】联系表单API接口 - 处理网站联系表单提交和邮件发送\n// 这个文件负责接收用户咨询，保存到数据库，并发送邮件通知\n // Next.js服务器端请求和响应处理\n // 邮件发送库\n // 数据库连接和集合定义\n // 咨询数据模型和验证\n // 错误处理\n // 限流和安全保护\n// 【重点】创建邮件发送器 - 配置SMTP服务器连接\n// 支持Gmail和其他SMTP服务器，用于发送通知邮件\nconst createTransporter = ()=>{\n    // 【重点】兼容性处理 - 支持多种环境变量名称\n    const emailUser = process.env.SMTP_USER || process.env.EMAIL_USER;\n    const emailPassword = process.env.SMTP_PASS || process.env.EMAIL_PASSWORD || process.env.EMAIL_PASS;\n    const smtpHost = process.env.SMTP_HOST || \"smtp.gmail.com\";\n    const smtpPort = parseInt(process.env.SMTP_PORT || \"587\");\n    // 【重点】配置检查 - 确保邮件配置完整\n    if (!emailUser || !emailPassword) {\n        throw new Error(\"Email configuration missing. Please set SMTP_USER and SMTP_PASS environment variables.\");\n    }\n    // 【重点】创建163邮箱SMTP传输器 - 适配网易163邮箱配置\n    const isPort465 = smtpPort === 465;\n    return nodemailer__WEBPACK_IMPORTED_MODULE_1__.createTransport({\n        host: smtpHost,\n        port: smtpPort,\n        secure: isPort465,\n        auth: {\n            user: emailUser,\n            pass: emailPassword // 发送邮箱密码或应用密码\n        },\n        tls: {\n            rejectUnauthorized: false // 允许自签名证书\n        }\n    });\n};\n// 【重点】管理员通知邮件模板 - 当有新咨询时发送给管理员的邮件\n// 使用HTML格式，包含完整的客户信息和专业的邮件样式\nconst createAdminEmailTemplate = (data)=>{\n    return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <title>New Inquiry from WELL-LI Website</title>\n      <style>\n        /* 【重点】邮件样式 - 确保在各种邮件客户端中正常显示 */\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n        .header { background: #1f2937; color: white; padding: 20px; text-align: center; }\n        .content { background: #f9fafb; padding: 20px; }\n        .field { margin-bottom: 15px; }\n        .label { font-weight: bold; color: #374151; }\n        .value { margin-top: 5px; padding: 10px; background: white; border-left: 4px solid #3b82f6; }\n        .message { background: white; padding: 15px; border-radius: 5px; margin-top: 10px; }\n        .footer { text-align: center; padding: 20px; color: #6b7280; font-size: 14px; }\n      </style>\n    </head>\n    <body>\n      <div class=\"container\">\n        <!-- 【重点】邮件头部 - 显示公司信息和通知类型 -->\n        <div class=\"header\">\n          <h1>New Customer Inquiry</h1>\n          <p>WELL-LI Cases Website</p>\n        </div>\n        \n        <!-- 【重点】邮件内容 - 显示客户提交的所有信息 -->\n        <div class=\"content\">\n          <!-- 客户姓名 -->\n          <div class=\"field\">\n            <div class=\"label\">Customer Name:</div>\n            <div class=\"value\">${data.name}</div>\n          </div>\n          \n          <!-- 客户邮箱 -->\n          <div class=\"field\">\n            <div class=\"label\">Email Address:</div>\n            <div class=\"value\">${data.email}</div>\n          </div>\n          \n          <!-- 客户电话（如果提供） -->\n          ${data.phone ? `\n          <div class=\"field\">\n            <div class=\"label\">Phone Number:</div>\n            <div class=\"value\">${data.phone}</div>\n          </div>\n          ` : \"\"}\n          \n          <!-- 客户国家 -->\n          <div class=\"field\">\n            <div class=\"label\">Country:</div>\n            <div class=\"value\">${data.country}</div>\n          </div>\n          \n          <!-- 客户公司（如果提供） -->\n          ${data.company ? `\n          <div class=\"field\">\n            <div class=\"label\">Company:</div>\n            <div class=\"value\">${data.company}</div>\n          </div>\n          ` : \"\"}\n          \n          <!-- 感兴趣的产品（如果选择） -->\n          ${data.productInterest ? `\n          <div class=\"field\">\n            <div class=\"label\">Product of Interest:</div>\n            <div class=\"value\">${data.productInterest}</div>\n          </div>\n          ` : \"\"}\n          \n          <!-- 客户咨询消息 -->\n          <div class=\"field\">\n            <div class=\"label\">Message:</div>\n            <div class=\"message\">${data.message.replace(/\\n/g, \"<br>\")}</div>\n          </div>\n        </div>\n        \n        <!-- 【重点】邮件底部 - 提醒管理员及时回复 -->\n        <div class=\"footer\">\n          <p>This inquiry was submitted through the WELL-LI Cases website contact form.</p>\n          <p>Please respond to the customer within 24 hours.</p>\n        </div>\n      </div>\n    </body>\n    </html>\n  `;\n};\n// 【重点】客户确认邮件模板 - 向客户发送的自动确认邮件\n// 告知客户我们已收到咨询，并说明后续处理流程\nconst createCustomerEmailTemplate = (data)=>{\n    return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <title>Thank you for your inquiry - WELL-LI Cases</title>\n      <style>\n        /* 【重点】客户邮件样式 - 专业友好的确认邮件样式 */\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n        .header { background: #1f2937; color: white; padding: 20px; text-align: center; }\n        .content { background: #f9fafb; padding: 20px; }\n        .highlight { background: #dbeafe; padding: 15px; border-radius: 5px; margin: 20px 0; }\n        .contact-info { background: white; padding: 15px; border-radius: 5px; margin: 20px 0; }\n        .footer { text-align: center; padding: 20px; color: #6b7280; font-size: 14px; }\n      </style>\n    </head>\n    <body>\n      <div class=\"container\">\n        <!-- 【重点】感谢标题 - 表达对客户咨询的感谢 -->\n        <div class=\"header\">\n          <h1>Thank You for Your Inquiry!</h1>\n          <p>WELL-LI Plastic Products Co., Ltd.</p>\n        </div>\n        \n        <!-- 【重点】邮件主体内容 - 详细说明后续处理流程 -->\n        <div class=\"content\">\n          <p>Dear ${data.name},</p>\n          \n          <p>Thank you for your interest in WELL-LI Cases. We have received your inquiry and our team will review your requirements carefully.</p>\n          \n          <!-- 【重点】处理流程说明 - 让客户了解接下来会发生什么 -->\n          <div class=\"highlight\">\n            <h3>What happens next?</h3>\n            <ul>\n              <li>Our sales team will review your inquiry within 24 hours</li>\n              <li>We'll prepare a customized quote based on your requirements</li>\n              <li>You'll receive a detailed response with product specifications and pricing</li>\n              <li>Our team will be available to answer any additional questions</li>\n            </ul>\n          </div>\n          \n          <!-- 【重点】联系信息 - 提供直接联系方式 -->\n          <div class=\"contact-info\">\n            <h3>Contact Information</h3>\n            <p><strong>Email:</strong> info@well-li.com</p>\n            <p><strong>Phone:</strong> +86 20 1234 5678</p>\n            <p><strong>Address:</strong> Industrial Zone, Guangzhou, China</p>\n            <p><strong>Business Hours:</strong> Mon-Fri 8:00 AM - 6:00 PM (GMT+8)</p>\n          </div>\n          \n          <p>If you have any urgent questions, please don't hesitate to contact us directly.</p>\n          \n          <p>Best regards,<br>\n          The WELL-LI Cases Team</p>\n        </div>\n        \n        <!-- 【重点】邮件底部 - 公司信息和免责声明 -->\n        <div class=\"footer\">\n          <p>WELL-LI Plastic Products Co., Ltd. | Reliable Protective Cases Manufacturer</p>\n          <p>This is an automated confirmation email. Please do not reply to this email.</p>\n        </div>\n      </div>\n    </body>\n    </html>\n  `;\n};\n// 【重点】POST接口 - 处理联系表单提交\n// 这是主要的API端点，负责接收表单数据、验证、保存到数据库并发送邮件\nasync function POST(request) {\n    try {\n        // 【重点】限流保护 - 防止恶意提交和垃圾邮件\n        const rateLimitMiddleware = (0,_lib_rate_limiter__WEBPACK_IMPORTED_MODULE_5__.createRateLimitMiddleware)(_lib_rate_limiter__WEBPACK_IMPORTED_MODULE_5__.contactFormLimiter);\n        const rateLimitResult = rateLimitMiddleware(request);\n        // 【重点】解析请求体 - 获取客户提交的表单数据\n        const body = await request.json();\n        // 【重点】数据验证 - 确保所有必填字段都存在且格式正确\n        const validation = (0,_lib_models__WEBPACK_IMPORTED_MODULE_3__.validateInquiry)(body);\n        if (!validation.isValid) {\n            throw new _lib_error_handler__WEBPACK_IMPORTED_MODULE_4__.ValidationError(\"Validation failed\", validation.errors);\n        }\n        // 【重点】数据清理 - 防止XSS攻击和恶意代码注入\n        const sanitizedData = (0,_lib_models__WEBPACK_IMPORTED_MODULE_3__.sanitizeInquiry)(body);\n        // 【重点】创建邮件发送器 - 准备发送通知邮件\n        const transporter = createTransporter();\n        // 【重点】准备管理员通知邮件 - 将客户咨询发送给管理员\n        const adminEmailOptions = {\n            from: process.env.SMTP_FROM || process.env.SMTP_USER || process.env.EMAIL_USER,\n            to: process.env.SMTP_TO || process.env.ADMIN_EMAIL || process.env.SMTP_USER || process.env.EMAIL_USER,\n            subject: `New Inquiry from ${sanitizedData.name} - WELL-LI Cases`,\n            html: createAdminEmailTemplate(sanitizedData) // HTML邮件内容\n        };\n        // 【重点】准备客户确认邮件 - 向客户发送确认收到咨询的邮件\n        const customerEmailOptions = {\n            from: process.env.SMTP_FROM || process.env.SMTP_USER || process.env.EMAIL_USER,\n            to: sanitizedData.email,\n            subject: \"Thank you for your inquiry - WELL-LI Cases\",\n            html: createCustomerEmailTemplate(sanitizedData) // HTML邮件内容\n        };\n        // 【重点】并行发送邮件 - 同时发送管理员通知和客户确认邮件\n        await Promise.all([\n            transporter.sendMail(adminEmailOptions),\n            transporter.sendMail(customerEmailOptions)\n        ]);\n        // 【重点】保存咨询到数据库 - 记录客户咨询信息用于后续跟进\n        try {\n            const db = await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_2__.getDatabase)() // 连接数据库\n            ;\n            // 【重点】构建咨询记录 - 包含客户信息和系统信息\n            const inquiry = {\n                ..._lib_models__WEBPACK_IMPORTED_MODULE_3__.DefaultInquiry,\n                name: sanitizedData.name,\n                email: sanitizedData.email,\n                phone: sanitizedData.phone,\n                country: sanitizedData.country,\n                company: sanitizedData.company,\n                productInterest: sanitizedData.productInterest,\n                message: sanitizedData.message,\n                ipAddress: request.ip || request.headers.get(\"x-forwarded-for\") || \"unknown\",\n                userAgent: request.headers.get(\"user-agent\") || \"unknown\",\n                createdAt: new Date(),\n                updatedAt: new Date() // 更新时间\n            };\n            // 【重点】插入数据库 - 保存咨询记录\n            const result = await db.collection(_lib_mongodb__WEBPACK_IMPORTED_MODULE_2__.COLLECTIONS.INQUIRIES).insertOne(inquiry);\n            console.log(\"Inquiry saved to database:\", result.insertedId);\n        } catch (dbError) {\n            // 【重点】数据库错误处理 - 即使数据库保存失败也要继续发送邮件\n            console.error(\"Failed to save inquiry to database:\", dbError);\n            (0,_lib_error_handler__WEBPACK_IMPORTED_MODULE_4__.logError)(new _lib_error_handler__WEBPACK_IMPORTED_MODULE_4__.DatabaseError(\"Failed to save inquiry\"), {\n                context: \"contact-form\"\n            });\n        // Continue with email sending even if database save fails\n        }\n        // 【重点】返回成功响应 - 告知前端提交成功\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: \"Inquiry submitted successfully\",\n            success: true // 成功标志\n        }, {\n            status: 200,\n            headers: _lib_rate_limiter__WEBPACK_IMPORTED_MODULE_5__.securityHeaders // 安全头部\n        });\n    } catch (error) {\n        // 【重点】错误处理 - 统一处理各种错误情况\n        const appError = (0,_lib_error_handler__WEBPACK_IMPORTED_MODULE_4__.handleApiError)(error) // 转换为应用错误\n        ;\n        (0,_lib_error_handler__WEBPACK_IMPORTED_MODULE_4__.logError)(appError, {\n            context: \"contact-form\",\n            request: request.url\n        }) // 记录错误日志\n        ;\n        // 【重点】返回错误响应 - 向前端返回错误信息\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: appError.message,\n            code: appError.code || \"UNKNOWN_ERROR\" // 错误代码\n        }, {\n            status: appError.statusCode || 500,\n            headers: _lib_rate_limiter__WEBPACK_IMPORTED_MODULE_5__.securityHeaders // 安全头部\n        });\n    }\n}\n// 【重点】GET接口 - 用于测试API是否正常工作\n// 可选功能，主要用于健康检查和调试\nasync function GET() {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        message: \"Contact API endpoint is working\",\n        methods: [\n            \"POST\"\n        ]\n    }, {\n        status: 200,\n        headers: _lib_rate_limiter__WEBPACK_IMPORTED_MODULE_5__.securityHeaders\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/contact/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/error-handler.ts":
/*!**********************************!*\
  !*** ./src/lib/error-handler.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppError: () => (/* binding */ AppError),\n/* harmony export */   AuthenticationError: () => (/* binding */ AuthenticationError),\n/* harmony export */   DatabaseError: () => (/* binding */ DatabaseError),\n/* harmony export */   NetworkError: () => (/* binding */ NetworkError),\n/* harmony export */   ValidationError: () => (/* binding */ ValidationError),\n/* harmony export */   getFieldError: () => (/* binding */ getFieldError),\n/* harmony export */   handleApiError: () => (/* binding */ handleApiError),\n/* harmony export */   handleClientError: () => (/* binding */ handleClientError),\n/* harmony export */   logError: () => (/* binding */ logError),\n/* harmony export */   retryWithBackoff: () => (/* binding */ retryWithBackoff),\n/* harmony export */   safeAsync: () => (/* binding */ safeAsync),\n/* harmony export */   withErrorHandling: () => (/* binding */ withErrorHandling)\n/* harmony export */ });\n// Global error handling utilities\nclass AppError extends Error {\n    constructor(message, statusCode = 500, code){\n        super(message);\n        this.statusCode = statusCode;\n        this.code = code;\n        this.isOperational = true;\n        Error.captureStackTrace(this, this.constructor);\n    }\n}\n// Error types\nclass ValidationError extends AppError {\n    constructor(message, details){\n        super(message, 400, \"VALIDATION_ERROR\");\n        this.name = \"ValidationError\";\n    }\n}\nclass DatabaseError extends AppError {\n    constructor(message = \"Database operation failed\"){\n        super(message, 500, \"DATABASE_ERROR\");\n        this.name = \"DatabaseError\";\n    }\n}\nclass NetworkError extends AppError {\n    constructor(message = \"Network request failed\"){\n        super(message, 503, \"NETWORK_ERROR\");\n        this.name = \"NetworkError\";\n    }\n}\nclass AuthenticationError extends AppError {\n    constructor(message = \"Authentication failed\"){\n        super(message, 401, \"AUTH_ERROR\");\n        this.name = \"AuthenticationError\";\n    }\n}\n// Error logging function\nfunction logError(error, context) {\n    const errorInfo = {\n        message: error.message,\n        stack: error.stack,\n        timestamp: new Date(),\n        ...error instanceof AppError && {\n            code: error.code,\n            statusCode: error.statusCode\n        },\n        ... false && 0,\n        ...context\n    };\n    // Log to console in development\n    if (true) {\n        console.error(\"Error logged:\", errorInfo);\n    }\n    // In production, send to monitoring service\n    if (false) {}\n    return errorInfo;\n}\n// API error handler\nfunction handleApiError(error) {\n    // Network errors\n    if (error.name === \"TypeError\" && error.message.includes(\"fetch\")) {\n        return new NetworkError(\"Failed to connect to server\");\n    }\n    // HTTP errors\n    if (error.response) {\n        const status = error.response.status;\n        const message = error.response.data?.message || error.message;\n        switch(status){\n            case 400:\n                return new ValidationError(message);\n            case 401:\n                return new AuthenticationError(message);\n            case 404:\n                return new AppError(\"Resource not found\", 404, \"NOT_FOUND\");\n            case 429:\n                return new AppError(\"Too many requests\", 429, \"RATE_LIMIT\");\n            case 500:\n                return new AppError(\"Internal server error\", 500, \"SERVER_ERROR\");\n            default:\n                return new AppError(message, status);\n        }\n    }\n    // Database errors\n    if (error.name === \"MongoError\" || error.name === \"MongoServerError\") {\n        return new DatabaseError(`Database error: ${error.message}`);\n    }\n    // Validation errors\n    if (error.name === \"ValidationError\") {\n        return new ValidationError(error.message);\n    }\n    // Default error\n    return new AppError(error.message || \"An unexpected error occurred\");\n}\n// Async error wrapper\nfunction withErrorHandling(fn, context) {\n    return async (...args)=>{\n        try {\n            return await fn(...args);\n        } catch (error) {\n            const appError = handleApiError(error);\n            logError(appError, {\n                context,\n                args\n            });\n            throw appError;\n        }\n    };\n}\n// Client-side error handler\nfunction handleClientError(error, context) {\n    logError(error, {\n        context,\n        source: \"client\"\n    });\n    // Show user-friendly message\n    if (false) {} else {\n        return error.message;\n    }\n}\n// Form error handler\nfunction getFieldError(errors, field) {\n    if (!errors || typeof errors !== \"object\") return undefined;\n    const error = errors[field];\n    if (typeof error === \"string\") return error;\n    if (Array.isArray(error) && error.length > 0) return error[0];\n    if (error?.message) return error.message;\n    return undefined;\n}\n// Retry mechanism\nasync function retryWithBackoff(fn, maxRetries = 3, baseDelay = 1000) {\n    let lastError;\n    for(let i = 0; i <= maxRetries; i++){\n        try {\n            return await fn();\n        } catch (error) {\n            lastError = error;\n            if (i === maxRetries) {\n                throw lastError;\n            }\n            // Exponential backoff\n            const delay = baseDelay * Math.pow(2, i);\n            await new Promise((resolve)=>setTimeout(resolve, delay));\n        }\n    }\n    throw lastError;\n}\n// Safe async function wrapper\nfunction safeAsync(fn, fallback) {\n    return async (...args)=>{\n        try {\n            return await fn(...args);\n        } catch (error) {\n            logError(error, {\n                function: fn.name,\n                args\n            });\n            return fallback;\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/error-handler.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/models.ts":
/*!***************************!*\
  !*** ./src/lib/models.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultInquiry: () => (/* binding */ DefaultInquiry),\n/* harmony export */   DefaultProduct: () => (/* binding */ DefaultProduct),\n/* harmony export */   InquiryValidation: () => (/* binding */ InquiryValidation),\n/* harmony export */   ProductValidation: () => (/* binding */ ProductValidation),\n/* harmony export */   isInquiry: () => (/* binding */ isInquiry),\n/* harmony export */   isProduct: () => (/* binding */ isProduct),\n/* harmony export */   isUser: () => (/* binding */ isUser),\n/* harmony export */   sanitizeInquiry: () => (/* binding */ sanitizeInquiry),\n/* harmony export */   sanitizeString: () => (/* binding */ sanitizeString),\n/* harmony export */   validateInquiry: () => (/* binding */ validateInquiry),\n/* harmony export */   validateProduct: () => (/* binding */ validateProduct)\n/* harmony export */ });\n// Type guards\nfunction isInquiry(obj) {\n    return obj && typeof obj.name === \"string\" && typeof obj.email === \"string\" && typeof obj.country === \"string\" && typeof obj.message === \"string\";\n}\nfunction isProduct(obj) {\n    return obj && typeof obj.name === \"string\" && typeof obj.category === \"string\" && typeof obj.description === \"string\" && Array.isArray(obj.images);\n}\nfunction isUser(obj) {\n    return obj && typeof obj.email === \"string\" && typeof obj.name === \"string\" && typeof obj.role === \"string\";\n}\n// Enhanced validation functions\nfunction validateInquiry(data) {\n    const errors = [];\n    // Name validation\n    if (!data.name || typeof data.name !== \"string\") {\n        errors.push(\"Name is required\");\n    } else {\n        const name = data.name.trim();\n        if (name.length < InquiryValidation.name.minLength || name.length > InquiryValidation.name.maxLength) {\n            errors.push(`Name must be between ${InquiryValidation.name.minLength} and ${InquiryValidation.name.maxLength} characters`);\n        }\n        // Check for suspicious patterns\n        if (/[<>\"'&\\{\\}]/.test(name)) {\n            errors.push(\"Name contains invalid characters\");\n        }\n    }\n    // Email validation\n    if (!data.email || typeof data.email !== \"string\") {\n        errors.push(\"Email is required\");\n    } else {\n        const email = data.email.trim().toLowerCase();\n        if (!InquiryValidation.email.pattern.test(email)) {\n            errors.push(\"Invalid email format\");\n        }\n        if (email.length > 254) {\n            errors.push(\"Email address is too long\");\n        }\n    }\n    // Country validation\n    if (!data.country || typeof data.country !== \"string\") {\n        errors.push(\"Country is required\");\n    } else {\n        const country = data.country.trim();\n        if (country.length > InquiryValidation.country.maxLength) {\n            errors.push(`Country must be less than ${InquiryValidation.country.maxLength} characters`);\n        }\n        if (/[<>\"'&\\{\\}]/.test(country)) {\n            errors.push(\"Country contains invalid characters\");\n        }\n    }\n    // Message validation\n    if (!data.message || typeof data.message !== \"string\") {\n        errors.push(\"Message is required\");\n    } else {\n        const message = data.message.trim();\n        if (message.length < InquiryValidation.message.minLength || message.length > InquiryValidation.message.maxLength) {\n            errors.push(`Message must be between ${InquiryValidation.message.minLength} and ${InquiryValidation.message.maxLength} characters`);\n        }\n    }\n    // Optional fields validation\n    if (data.phone && typeof data.phone === \"string\") {\n        const phone = data.phone.trim();\n        if (phone.length > InquiryValidation.phone.maxLength) {\n            errors.push(`Phone must be less than ${InquiryValidation.phone.maxLength} characters`);\n        }\n        // Basic phone format validation\n        if (!/^[+\\d\\s\\-\\(\\)]+$/.test(phone)) {\n            errors.push(\"Phone number contains invalid characters\");\n        }\n    }\n    if (data.company && typeof data.company === \"string\") {\n        const company = data.company.trim();\n        if (company.length > InquiryValidation.company.maxLength) {\n            errors.push(`Company must be less than ${InquiryValidation.company.maxLength} characters`);\n        }\n        if (/[<>\"'&\\{\\}]/.test(company)) {\n            errors.push(\"Company name contains invalid characters\");\n        }\n    }\n    // Additional security checks\n    const suspiciousPatterns = [\n        /<script[^>]*>.*?<\\/script>/gi,\n        /javascript:/gi,\n        /on\\w+\\s*=/gi,\n        /data:(?:text\\/html|application\\/javascript)/gi\n    ];\n    const textFields = [\n        data.name,\n        data.message,\n        data.company,\n        data.productInterest\n    ];\n    for (const field of textFields){\n        if (typeof field === \"string\") {\n            for (const pattern of suspiciousPatterns){\n                if (pattern.test(field)) {\n                    errors.push(\"Invalid content detected\");\n                    break;\n                }\n            }\n        }\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\nfunction validateProduct(data) {\n    const errors = [];\n    // Name validation\n    if (!data.name || typeof data.name !== \"string\") {\n        errors.push(\"Name is required\");\n    } else {\n        const name = data.name.trim();\n        if (name.length < ProductValidation.name.minLength || name.length > ProductValidation.name.maxLength) {\n            errors.push(`Name must be between ${ProductValidation.name.minLength} and ${ProductValidation.name.maxLength} characters`);\n        }\n        if (/[<>\"'&\\{\\}]/.test(name)) {\n            errors.push(\"Name contains invalid characters\");\n        }\n    }\n    // Category validation\n    if (!data.category || typeof data.category !== \"string\") {\n        errors.push(\"Category is required\");\n    } else {\n        const category = data.category.trim();\n        if (category.length > ProductValidation.category.maxLength) {\n            errors.push(`Category must be less than ${ProductValidation.category.maxLength} characters`);\n        }\n        if (/[<>\"'&\\{\\}]/.test(category)) {\n            errors.push(\"Category contains invalid characters\");\n        }\n    }\n    // Description validation\n    if (!data.description || typeof data.description !== \"string\") {\n        errors.push(\"Description is required\");\n    } else {\n        const description = data.description.trim();\n        if (description.length < ProductValidation.description.minLength || description.length > ProductValidation.description.maxLength) {\n            errors.push(`Description must be between ${ProductValidation.description.minLength} and ${ProductValidation.description.maxLength} characters`);\n        }\n    }\n    // Images validation\n    if (!Array.isArray(data.images)) {\n        errors.push(\"Images must be an array\");\n    } else if (data.images.length < ProductValidation.images.minItems) {\n        errors.push(`At least ${ProductValidation.images.minItems} image is required`);\n    } else {\n        // Validate image URLs\n        for (const image of data.images){\n            if (typeof image !== \"string\" || !image.trim()) {\n                errors.push(\"All images must be valid URLs\");\n                break;\n            }\n        }\n    }\n    // Specifications validation\n    if (!data.specifications || typeof data.specifications !== \"object\") {\n        errors.push(\"Specifications are required\");\n    }\n    // Features validation\n    if (!Array.isArray(data.features)) {\n        errors.push(\"Features must be an array\");\n    } else if (data.features.length < ProductValidation.features.minItems) {\n        errors.push(`At least ${ProductValidation.features.minItems} feature is required`);\n    } else {\n        // Validate feature strings\n        for (const feature of data.features){\n            if (typeof feature !== \"string\" || !feature.trim()) {\n                errors.push(\"All features must be valid strings\");\n                break;\n            }\n        }\n    }\n    // Optional fields validation\n    if (data.slug && typeof data.slug === \"string\") {\n        if (!/^[a-z0-9-]+$/.test(data.slug)) {\n            errors.push(\"Slug must contain only lowercase letters, numbers, and hyphens\");\n        }\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n// Enhanced sanitization functions\nfunction sanitizeString(str) {\n    if (typeof str !== \"string\") return \"\";\n    return str.trim().replace(/[<>\"'&]/g, (match)=>{\n        const entities = {\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            '\"': \"&quot;\",\n            \"'\": \"&#x27;\",\n            \"&\": \"&amp;\"\n        };\n        return entities[match] || match;\n    })// Remove potentially dangerous patterns\n    .replace(/javascript:/gi, \"\").replace(/on\\w+\\s*=/gi, \"\").replace(/<script[^>]*>.*?<\\/script>/gi, \"\").replace(/data:(?:text\\/html|application\\/javascript)/gi, \"\")// Limit length to prevent abuse\n    .substring(0, 2000);\n}\nfunction sanitizeInquiry(data) {\n    const sanitized = {\n        name: data.name ? sanitizeString(data.name) : \"\",\n        email: data.email ? sanitizeString(data.email.toLowerCase().trim()) : \"\",\n        phone: data.phone ? sanitizeString(data.phone) : undefined,\n        country: data.country ? sanitizeString(data.country) : \"\",\n        company: data.company ? sanitizeString(data.company) : undefined,\n        productInterest: data.productInterest ? sanitizeString(data.productInterest) : undefined,\n        productId: data.productId ? sanitizeString(data.productId) : undefined,\n        productName: data.productName ? sanitizeString(data.productName) : undefined,\n        quantity: data.quantity ? sanitizeString(data.quantity) : undefined,\n        message: data.message ? sanitizeString(data.message) : \"\"\n    };\n    // Remove empty optional fields\n    Object.keys(sanitized).forEach((key)=>{\n        if (sanitized[key] === undefined || sanitized[key] === \"\") {\n            if (key !== \"name\" && key !== \"email\" && key !== \"country\" && key !== \"message\") {\n                delete sanitized[key];\n            }\n        }\n    });\n    return sanitized;\n}\n// Validation schemas (basic)\nconst InquiryValidation = {\n    name: {\n        required: true,\n        minLength: 2,\n        maxLength: 100\n    },\n    email: {\n        required: true,\n        pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    },\n    phone: {\n        required: false,\n        maxLength: 20\n    },\n    country: {\n        required: true,\n        maxLength: 50\n    },\n    company: {\n        required: false,\n        maxLength: 100\n    },\n    productInterest: {\n        required: false,\n        maxLength: 50\n    },\n    productId: {\n        required: false,\n        maxLength: 50\n    },\n    productName: {\n        required: false,\n        maxLength: 200\n    },\n    quantity: {\n        required: false,\n        maxLength: 50\n    },\n    message: {\n        required: true,\n        minLength: 10,\n        maxLength: 2000\n    }\n};\nconst ProductValidation = {\n    name: {\n        required: true,\n        minLength: 3,\n        maxLength: 200\n    },\n    category: {\n        required: true,\n        maxLength: 50\n    },\n    description: {\n        required: true,\n        minLength: 10,\n        maxLength: 500\n    },\n    images: {\n        required: true,\n        minItems: 1\n    },\n    specifications: {\n        required: true\n    },\n    features: {\n        required: true,\n        minItems: 1\n    }\n};\n// Default values\nconst DefaultInquiry = {\n    status: \"new\",\n    priority: \"medium\",\n    source: \"website\",\n    notes: [],\n    createdAt: new Date(),\n    updatedAt: new Date()\n};\nconst DefaultProduct = {\n    featured: false,\n    active: true,\n    sortOrder: 0,\n    createdAt: new Date(),\n    updatedAt: new Date()\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/models.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mongodb.ts":
/*!****************************!*\
  !*** ./src/lib/mongodb.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COLLECTIONS: () => (/* binding */ COLLECTIONS),\n/* harmony export */   \"default\": () => (/* binding */ getClientPromise),\n/* harmony export */   getDatabase: () => (/* binding */ getDatabase),\n/* harmony export */   initializeDatabase: () => (/* binding */ initializeDatabase),\n/* harmony export */   testConnection: () => (/* binding */ testConnection)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n// 【重点】MongoDB数据库连接配置 - 管理数据库连接和操作\n// 这个文件是整个应用的数据库核心，负责建立和维护MongoDB连接\n // MongoDB官方驱动\n// 【重点】环境变量检查函数 - 延迟检查，避免模块加载时报错\nfunction checkEnvironment() {\n    if (false) {}\n    return \"mongodb+srv://766282480qnm_db_user:13195622840Qbb@weili-website.x7cdvcd.mongodb.net/wellicases?retryWrites=true&w=majority&appName=WEILI-website&ssl=true&authSource=admin\";\n}\n// 【重点】连接选项配置 - 优化数据库连接性能和稳定性，解决SSL问题\nconst options = {\n    maxPoolSize: 10,\n    serverSelectionTimeoutMS: 5000,\n    socketTimeoutMS: 45000,\n    family: 4,\n    // SSL/TLS配置 - 解决SSL连接问题\n    tls: true,\n    tlsAllowInvalidCertificates: false,\n    tlsAllowInvalidHostnames: false,\n    // 连接重试配置\n    retryWrites: true,\n    retryReads: true,\n    // 认证配置\n    authSource: \"admin\"\n};\n// 【重点】客户端连接管理 - 根据环境采用不同的连接策略\nlet client;\nlet clientPromise;\n// 改为函数形式，延迟初始化\nfunction initializeClient() {\n    if (clientPromise) {\n        return clientPromise;\n    }\n    const uri = checkEnvironment() // 在需要时才检查环境变量\n    ;\n    if (true) {\n        // 【重点】开发环境连接策略 - 使用全局变量避免热重载时重复连接\n        // 在开发模式下，使用全局变量保存连接，避免HMR（热模块替换）导致的重复连接\n        let globalWithMongo = global;\n        if (!globalWithMongo._mongoClientPromise) {\n            client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, options) // 创建新的MongoDB客户端\n            ;\n            globalWithMongo._mongoClientPromise = client.connect() // 建立连接并保存到全局变量\n            ;\n        }\n        clientPromise = globalWithMongo._mongoClientPromise // 使用已存在的连接\n        ;\n    } else {}\n    return clientPromise;\n}\n// 【重点】导出客户端连接Promise - 在模块间共享数据库连接\n// 通过在独立模块中导出，可以在不同函数间共享同一个客户端连接\nfunction getClientPromise() {\n    return initializeClient();\n}\n// 【重点】数据库辅助函数 - 获取数据库实例\nasync function getDatabase() {\n    try {\n        const client = await initializeClient() // 使用新的初始化函数\n        ;\n        return client.db(\"wellicases\") // 返回指定数据库实例（修正数据库名称）\n        ;\n    } catch (error) {\n        // 【重点】连接错误处理 - 记录错误并抛出友好的错误信息\n        console.error(\"Failed to connect to database:\", error);\n        throw new Error(\"Database connection failed\") // 抛出数据库连接失败错误\n        ;\n    }\n}\n// 【重点】集合名称常量 - 统一管理数据库集合名称\n// 使用常量避免硬编码，便于维护和重构\nconst COLLECTIONS = {\n    INQUIRIES: \"inquiries\",\n    PRODUCTS: \"products\",\n    USERS: \"users\",\n    SETTINGS: \"settings\" // 系统设置集合\n};\n// 【重点】增强的数据库连接测试 - 带重试逻辑的连接检查\nasync function testConnection(retries = 3) {\n    for(let i = 0; i < retries; i++){\n        try {\n            const client = await initializeClient() // 使用新的初始化函数\n            ;\n            await client.db(\"admin\").command({\n                ping: 1\n            }) // 发送ping命令测试连接\n            ;\n            console.log(\"✅ MongoDB connection successful\") // 连接成功\n            ;\n            return true;\n        } catch (error) {\n            console.error(`❌ MongoDB connection attempt ${i + 1} failed:`, error.message) // 简化错误信息\n            ;\n            if (i === retries - 1) {\n                // 【重点】所有重试都失败 - 记录最终失败状态\n                console.error(\"❌ All MongoDB connection attempts failed\");\n                console.warn(\"⚠️ This might be due to SSL/TLS compatibility issues on Windows\");\n                console.warn(\"⚠️ The application will continue without database connection\");\n                return false;\n            }\n            // 【重点】等待后重试 - 递增延迟避免频繁重试\n            // 【重点】等待后重试 - 递增延迟避免频繁重试\n            await new Promise((resolve)=>setTimeout(resolve, 1000 * (i + 1)));\n        }\n    }\n    return false;\n}\n// 【重点】数据库初始化 - 创建索引优化查询性能\nasync function initializeDatabase() {\n    try {\n        const db = await getDatabase() // 获取数据库实例\n        ;\n        // 【重点】咨询集合索引 - 优化常用查询字段的性能\n        const inquiriesIndexes = [\n            {\n                key: {\n                    email: 1\n                }\n            },\n            {\n                key: {\n                    createdAt: -1\n                }\n            },\n            {\n                key: {\n                    country: 1\n                }\n            },\n            {\n                key: {\n                    productInterest: 1\n                }\n            },\n            {\n                key: {\n                    status: 1\n                }\n            } // 状态索引：用于筛选处理状态\n        ];\n        const productsIndexes = [\n            {\n                key: {\n                    name: \"text\",\n                    description: \"text\"\n                }\n            },\n            {\n                key: {\n                    category: 1\n                }\n            },\n            {\n                key: {\n                    featured: 1\n                }\n            },\n            {\n                key: {\n                    active: 1\n                }\n            },\n            {\n                key: {\n                    slug: 1\n                },\n                unique: true\n            } // 唯一slug索引：确保URL标识符唯一性\n        ];\n        // 【重点】并行创建索引 - 同时为多个集合创建索引提高效率\n        await Promise.all([\n            db.collection(COLLECTIONS.INQUIRIES).createIndexes(inquiriesIndexes).catch((err)=>console.warn(\"Failed to create inquiries indexes:\", err)),\n            db.collection(COLLECTIONS.PRODUCTS).createIndexes(productsIndexes).catch((err)=>console.warn(\"Failed to create products indexes:\", err)) // 产品集合索引创建失败处理\n        ]);\n        console.log(\"✅ Database indexes created successfully\") // 索引创建成功\n        ;\n    } catch (error) {\n        // 【重点】数据库初始化错误处理 - 避免应用崩溃\n        console.error(\"❌ Failed to initialize database:\", error);\n        // 不抛出错误以防止应用崩溃 - 应用可以在没有索引的情况下运行\n        console.warn(\"Database initialization failed, continuing without indexes\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mongodb.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/rate-limiter.ts":
/*!*********************************!*\
  !*** ./src/lib/rate-limiter.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiLimiter: () => (/* binding */ apiLimiter),\n/* harmony export */   contactFormLimiter: () => (/* binding */ contactFormLimiter),\n/* harmony export */   createRateLimitMiddleware: () => (/* binding */ createRateLimitMiddleware),\n/* harmony export */   generateCSRFToken: () => (/* binding */ generateCSRFToken),\n/* harmony export */   inquiryFormLimiter: () => (/* binding */ inquiryFormLimiter),\n/* harmony export */   isValidEmail: () => (/* binding */ isValidEmail),\n/* harmony export */   isValidIP: () => (/* binding */ isValidIP),\n/* harmony export */   isValidPhoneNumber: () => (/* binding */ isValidPhoneNumber),\n/* harmony export */   sanitizeFilename: () => (/* binding */ sanitizeFilename),\n/* harmony export */   sanitizeURL: () => (/* binding */ sanitizeURL),\n/* harmony export */   securityHeaders: () => (/* binding */ securityHeaders),\n/* harmony export */   validateCSRFToken: () => (/* binding */ validateCSRFToken),\n/* harmony export */   validatePasswordStrength: () => (/* binding */ validatePasswordStrength)\n/* harmony export */ });\n// Rate limiting utility for API endpoints\nclass RateLimiter {\n    constructor(config){\n        this.store = {};\n        this.config = config;\n        // Clean up expired entries every 5 minutes\n        setInterval(()=>{\n            this.cleanup();\n        }, 5 * 60 * 1000);\n    }\n    cleanup() {\n        const now = Date.now();\n        Object.keys(this.store).forEach((key)=>{\n            if (this.store[key].resetTime <= now) {\n                delete this.store[key];\n            }\n        });\n    }\n    getKey(request) {\n        if (this.config.keyGenerator) {\n            return this.config.keyGenerator(request);\n        }\n        // Default key: IP address\n        return request.ip || request.headers.get(\"x-forwarded-for\") || request.headers.get(\"x-real-ip\") || \"unknown\";\n    }\n    check(request) {\n        const key = this.getKey(request);\n        const now = Date.now();\n        const resetTime = now + this.config.windowMs;\n        // Initialize or reset if window expired\n        if (!this.store[key] || this.store[key].resetTime <= now) {\n            this.store[key] = {\n                count: 0,\n                resetTime\n            };\n        }\n        const current = this.store[key];\n        const allowed = current.count < this.config.maxRequests;\n        if (allowed) {\n            current.count++;\n        }\n        return {\n            allowed,\n            limit: this.config.maxRequests,\n            remaining: Math.max(0, this.config.maxRequests - current.count),\n            resetTime: current.resetTime\n        };\n    }\n}\n// Pre-configured rate limiters\nconst contactFormLimiter = new RateLimiter({\n    windowMs: 15 * 60 * 1000,\n    maxRequests: 5\n});\nconst inquiryFormLimiter = new RateLimiter({\n    windowMs: 15 * 60 * 1000,\n    maxRequests: 10\n});\nconst apiLimiter = new RateLimiter({\n    windowMs: 1 * 60 * 1000,\n    maxRequests: 60\n});\n// Rate limit middleware factory\nfunction createRateLimitMiddleware(limiter) {\n    return (request)=>{\n        const result = limiter.check(request);\n        if (!result.allowed) {\n            const resetTimeSeconds = Math.ceil((result.resetTime - Date.now()) / 1000);\n            throw new Error(`Rate limit exceeded. Try again in ${resetTimeSeconds} seconds.`);\n        }\n        return result;\n    };\n}\n// CSRF protection\nfunction generateCSRFToken() {\n    const array = new Uint8Array(32);\n    crypto.getRandomValues(array);\n    return Array.from(array, (byte)=>byte.toString(16).padStart(2, \"0\")).join(\"\");\n}\nfunction validateCSRFToken(token, sessionToken) {\n    if (!token || !sessionToken) return false;\n    return token === sessionToken;\n}\n// Input sanitization helpers\nfunction sanitizeFilename(filename) {\n    return filename.replace(/[^a-zA-Z0-9.-]/g, \"_\").replace(/^\\.+/, \"\").replace(/\\.+$/, \"\").substring(0, 255);\n}\nfunction sanitizeURL(url) {\n    try {\n        const parsed = new URL(url);\n        // Only allow http and https protocols\n        if (![\n            \"http:\",\n            \"https:\"\n        ].includes(parsed.protocol)) {\n            throw new Error(\"Invalid protocol\");\n        }\n        return parsed.toString();\n    } catch  {\n        throw new Error(\"Invalid URL\");\n    }\n}\nfunction isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email) && email.length <= 254;\n}\nfunction isValidPhoneNumber(phone) {\n    // Basic international phone number validation\n    const phoneRegex = /^[+]?[\\d\\s\\-\\(\\)]{7,20}$/;\n    return phoneRegex.test(phone);\n}\n// Content Security Policy headers\nconst securityHeaders = {\n    \"X-Frame-Options\": \"DENY\",\n    \"X-Content-Type-Options\": \"nosniff\",\n    \"Referrer-Policy\": \"origin-when-cross-origin\",\n    \"X-DNS-Prefetch-Control\": \"on\",\n    \"Strict-Transport-Security\": \"max-age=31536000; includeSubDomains\",\n    \"Permissions-Policy\": \"geolocation=(), microphone=(), camera=()\",\n    \"Content-Security-Policy\": \"default-src 'self'; \" + \"script-src 'self' 'unsafe-inline' 'unsafe-eval'; \" + \"style-src 'self' 'unsafe-inline'; \" + \"img-src 'self' data: https:; \" + \"font-src 'self'; \" + \"connect-src 'self'; \" + \"frame-ancestors 'none';\"\n};\n// IP address validation\nfunction isValidIP(ip) {\n    const ipv4Regex = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\n    const ipv6Regex = /^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$/;\n    return ipv4Regex.test(ip) || ipv6Regex.test(ip);\n}\n// Password strength validation\nfunction validatePasswordStrength(password) {\n    const issues = [];\n    let score = 0;\n    if (password.length < 8) {\n        issues.push(\"Password must be at least 8 characters long\");\n    } else {\n        score += 1;\n    }\n    if (!/[a-z]/.test(password)) {\n        issues.push(\"Password must contain at least one lowercase letter\");\n    } else {\n        score += 1;\n    }\n    if (!/[A-Z]/.test(password)) {\n        issues.push(\"Password must contain at least one uppercase letter\");\n    } else {\n        score += 1;\n    }\n    if (!/\\d/.test(password)) {\n        issues.push(\"Password must contain at least one number\");\n    } else {\n        score += 1;\n    }\n    if (!/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n        issues.push(\"Password must contain at least one special character\");\n    } else {\n        score += 1;\n    }\n    return {\n        isValid: issues.length === 0,\n        score,\n        issues\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/rate-limiter.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/nodemailer"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontact%2Froute&page=%2Fapi%2Fcontact%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontact%2Froute.ts&appDir=E%3A%5Cnanuk%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cnanuk&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();