"use strict";(()=>{var e={};e.id=829,e.ids=[829],e.modules={8013:e=>{e.exports=require("mongodb")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7544:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>m,patchFetch:()=>y,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>h,staticGenerationAsyncStorage:()=>p});var o={};a.r(o),a.d(o,{GET:()=>l});var n=a(9303),r=a(8716),i=a(3131),s=a(7070),c=a(4184);async function l(e){try{let e=await (0,c.M7)(1),t={status:e?"healthy":"unhealthy",timestamp:new Date().toISOString(),checks:{database:e?"ok":"error",application:"ok"},version:process.env.npm_package_version||"1.0.0",environment:"production"},a="healthy"===t.status?200:503;return s.NextResponse.json(t,{status:a,headers:{"Cache-Control":"no-cache, no-store, must-revalidate","Content-Type":"application/json"}})}catch(e){return console.error("Health check failed:",e),s.NextResponse.json({status:"unhealthy",timestamp:new Date().toISOString(),error:"Health check failed",checks:{database:"error",application:"error"}},{status:503,headers:{"Cache-Control":"no-cache, no-store, must-revalidate","Content-Type":"application/json"}})}}let u=new n.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/health/route",pathname:"/api/health",filename:"route",bundlePath:"app/api/health/route"},resolvedPagePath:"E:\\nanuk\\src\\app\\api\\health\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:d,staticGenerationAsyncStorage:p,serverHooks:h}=u,m="/api/health/route";function y(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:p})}},4184:(e,t,a)=>{let o;a.d(t,{M7:()=>l,N8:()=>s,Ul:()=>c,xN:()=>u});var n=a(8013);let r={maxPoolSize:10,serverSelectionTimeoutMS:5e3,socketTimeoutMS:45e3,family:4,tls:!0,tlsAllowInvalidCertificates:!1,tlsAllowInvalidHostnames:!1,retryWrites:!0,retryReads:!0,authSource:"admin"};function i(){return o||(o=new n.MongoClient("mongodb+srv://766282480qnm_db_user:13195622840Qbb@weili-website.x7cdvcd.mongodb.net/wellicases?retryWrites=true&w=majority&appName=WEILI-website&ssl=true&authSource=admin",r).connect())}async function s(){try{return(await i()).db("wellicases")}catch(e){throw console.error("Failed to connect to database:",e),Error("Database connection failed")}}let c={INQUIRIES:"inquiries",PRODUCTS:"products",USERS:"users",SETTINGS:"settings"};async function l(e=3){for(let t=0;t<e;t++)try{let e=await i();return await e.db("admin").command({ping:1}),console.log("✅ MongoDB connection successful"),!0}catch(a){if(console.error(`❌ MongoDB connection attempt ${t+1} failed:`,a.message),t===e-1)return console.error("❌ All MongoDB connection attempts failed"),console.warn("⚠️ This might be due to SSL/TLS compatibility issues on Windows"),console.warn("⚠️ The application will continue without database connection"),!1;await new Promise(e=>setTimeout(e,1e3*(t+1)))}return!1}async function u(){try{let e=await s();await Promise.all([e.collection(c.INQUIRIES).createIndexes([{key:{email:1}},{key:{createdAt:-1}},{key:{country:1}},{key:{productInterest:1}},{key:{status:1}}]).catch(e=>console.warn("Failed to create inquiries indexes:",e)),e.collection(c.PRODUCTS).createIndexes([{key:{name:"text",description:"text"}},{key:{category:1}},{key:{featured:1}},{key:{active:1}},{key:{slug:1},unique:!0}]).catch(e=>console.warn("Failed to create products indexes:",e))]),console.log("✅ Database indexes created successfully")}catch(e){console.error("❌ Failed to initialize database:",e),console.warn("Database initialization failed, continuing without indexes")}}}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),o=t.X(0,[948,972],()=>a(7544));module.exports=o})();