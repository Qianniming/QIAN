"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/products/route";
exports.ids = ["app/api/products/route"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=E%3A%5Cnanuk%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cnanuk&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=E%3A%5Cnanuk%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cnanuk&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var E_nanuk_src_app_api_products_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/products/route.ts */ \"(rsc)/./src/app/api/products/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/products/route\",\n        pathname: \"/api/products\",\n        filename: \"route\",\n        bundlePath: \"app/api/products/route\"\n    },\n    resolvedPagePath: \"E:\\\\nanuk\\\\src\\\\app\\\\api\\\\products\\\\route.ts\",\n    nextConfigOutput,\n    userland: E_nanuk_src_app_api_products_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/products/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcm9kdWN0cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcHJvZHVjdHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZwcm9kdWN0cyUyRnJvdXRlLnRzJmFwcERpcj1FJTNBJTVDbmFudWslNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUUlM0ElNUNuYW51ayZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD1zdGFuZGFsb25lJnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ0o7QUFDekU7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWxsLWxpLWNhc2VzLz8zMTNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkU6XFxcXG5hbnVrXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHByb2R1Y3RzXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcHJvZHVjdHMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9wcm9kdWN0c1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvcHJvZHVjdHMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJFOlxcXFxuYW51a1xcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxwcm9kdWN0c1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvcHJvZHVjdHMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=E%3A%5Cnanuk%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cnanuk&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/products/route.ts":
/*!***************************************!*\
  !*** ./src/app/api/products/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n/* harmony import */ var _lib_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/models */ \"(rsc)/./src/lib/models.ts\");\n/* harmony import */ var _lib_seed_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/seed-data */ \"(rsc)/./src/lib/seed-data.ts\");\n/* harmony import */ var _lib_cache__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/cache */ \"(rsc)/./src/lib/cache.ts\");\n/* harmony import */ var _lib_rate_limiter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/rate-limiter */ \"(rsc)/./src/lib/rate-limiter.ts\");\n\n\n\n\n\n\n// Cached database query function\nconst getCachedProducts = (0,_lib_cache__WEBPACK_IMPORTED_MODULE_4__.withCache)(async (filters)=>{\n    await (0,_lib_seed_data__WEBPACK_IMPORTED_MODULE_3__.checkAndSeedDatabase)();\n    const db = await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_1__.getDatabase)();\n    const collection = db.collection(_lib_mongodb__WEBPACK_IMPORTED_MODULE_1__.COLLECTIONS.PRODUCTS);\n    const [products, total, categories] = await Promise.all([\n        collection.find(filters.query).sort({\n            [filters.sortBy]: filters.sortOrder\n        }).skip(filters.skip).limit(filters.limit).toArray(),\n        collection.countDocuments(filters.query),\n        collection.distinct(\"category\", {\n            active: true\n        })\n    ]);\n    return {\n        products,\n        total,\n        categories\n    };\n}, (filters)=>_lib_cache__WEBPACK_IMPORTED_MODULE_4__.cacheKeys.products(filters), 5 * 60 * 1000 // 5 minutes cache\n);\n// GET /api/products - Get all products with optional filtering\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const category = searchParams.get(\"category\");\n        const featured = searchParams.get(\"featured\");\n        const search = searchParams.get(\"search\");\n        const limit = Math.min(parseInt(searchParams.get(\"limit\") || \"20\"), 100) // Limit max to 100\n        ;\n        const skip = Math.max(parseInt(searchParams.get(\"skip\") || \"0\"), 0) // Ensure non-negative\n        ;\n        const sortBy = searchParams.get(\"sortBy\") || \"sortOrder\";\n        const sortOrder = searchParams.get(\"sortOrder\") === \"desc\" ? -1 : 1;\n        // Check and seed database if empty\n        await (0,_lib_seed_data__WEBPACK_IMPORTED_MODULE_3__.checkAndSeedDatabase)();\n        const db = await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_1__.getDatabase)();\n        const collection = db.collection(_lib_mongodb__WEBPACK_IMPORTED_MODULE_1__.COLLECTIONS.PRODUCTS);\n        // Build query with proper validation\n        const query = {\n            active: true\n        };\n        if (category && category !== \"all\" && typeof category === \"string\") {\n            query.category = category.trim();\n        }\n        if (featured === \"true\") {\n            query.featured = true;\n        }\n        if (search && typeof search === \"string\" && search.trim().length > 0) {\n            // Use regex search as fallback if text index doesn't exist\n            const searchTerm = search.trim();\n            query.$or = [\n                {\n                    name: {\n                        $regex: searchTerm,\n                        $options: \"i\"\n                    }\n                },\n                {\n                    description: {\n                        $regex: searchTerm,\n                        $options: \"i\"\n                    }\n                },\n                {\n                    category: {\n                        $regex: searchTerm,\n                        $options: \"i\"\n                    }\n                }\n            ];\n        }\n        // Validate sortBy field to prevent injection\n        const allowedSortFields = [\n            \"sortOrder\",\n            \"name\",\n            \"category\",\n            \"createdAt\",\n            \"updatedAt\"\n        ];\n        const finalSortBy = allowedSortFields.includes(sortBy) ? sortBy : \"sortOrder\";\n        // Prepare filters for caching\n        const filters = {\n            query,\n            sortBy: finalSortBy,\n            sortOrder,\n            skip,\n            limit\n        };\n        // Execute cached query\n        const { products, total, categories } = await getCachedProducts(filters);\n        // Transform products to match frontend expectations\n        const transformedProducts = products.map((product)=>({\n                ...product,\n                id: product._id?.toString() || product.slug,\n                image: Array.isArray(product.images) && product.images.length > 0 ? product.images[0] : \"/images/products/default.svg\" // Use first image or default\n            }));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            products: transformedProducts,\n            pagination: {\n                total,\n                limit,\n                skip,\n                hasMore: skip + limit < total\n            },\n            categories,\n            success: true\n        }, {\n            headers: {\n                ..._lib_rate_limiter__WEBPACK_IMPORTED_MODULE_5__.securityHeaders,\n                \"Cache-Control\": \"public, max-age=300\",\n                \"ETag\": `\"products-${Date.now()}\"`\n            }\n        });\n    } catch (error) {\n        console.error(\"Error fetching products:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch products\",\n            success: false\n        }, {\n            status: 500\n        });\n    }\n}\n// POST /api/products - Create new product (admin only)\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        // Validate input data\n        const validation = (0,_lib_models__WEBPACK_IMPORTED_MODULE_2__.validateProduct)(body);\n        if (!validation.isValid) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Validation failed\",\n                details: validation.errors\n            }, {\n                status: 400\n            });\n        }\n        // Sanitize string fields\n        const sanitizedBody = {\n            ...body,\n            name: (0,_lib_models__WEBPACK_IMPORTED_MODULE_2__.sanitizeString)(body.name || \"\"),\n            description: (0,_lib_models__WEBPACK_IMPORTED_MODULE_2__.sanitizeString)(body.description || \"\"),\n            category: (0,_lib_models__WEBPACK_IMPORTED_MODULE_2__.sanitizeString)(body.category || \"\")\n        };\n        const db = await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_1__.getDatabase)();\n        const collection = db.collection(_lib_mongodb__WEBPACK_IMPORTED_MODULE_1__.COLLECTIONS.PRODUCTS);\n        // Generate slug from name\n        const slug = sanitizedBody.name.toLowerCase().replace(/[^a-z0-9]+/g, \"-\").replace(/(^-|-$)/g, \"\");\n        // Check if slug already exists\n        const existingProduct = await collection.findOne({\n            slug\n        });\n        if (existingProduct) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Product with this name already exists\"\n            }, {\n                status: 409\n            });\n        }\n        const product = {\n            ...sanitizedBody,\n            slug,\n            active: sanitizedBody.active ?? true,\n            featured: sanitizedBody.featured ?? false,\n            sortOrder: sanitizedBody.sortOrder ?? 0,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        const result = await collection.insertOne(product);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: \"Product created successfully\",\n            productId: result.insertedId,\n            success: true\n        });\n    } catch (error) {\n        console.error(\"Error creating product:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to create product\",\n            success: false\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/products/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/cache.ts":
/*!**************************!*\
  !*** ./src/lib/cache.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientCache: () => (/* binding */ ClientCache),\n/* harmony export */   cache: () => (/* binding */ cache),\n/* harmony export */   cacheInvalidation: () => (/* binding */ cacheInvalidation),\n/* harmony export */   cacheKeys: () => (/* binding */ cacheKeys),\n/* harmony export */   clientCache: () => (/* binding */ clientCache),\n/* harmony export */   createCachedResponse: () => (/* binding */ createCachedResponse),\n/* harmony export */   withCache: () => (/* binding */ withCache)\n/* harmony export */ });\n// In-memory cache implementation for Next.js\nclass MemoryCache {\n    set(key, data, ttl) {\n        const item = {\n            data,\n            timestamp: Date.now(),\n            ttl: ttl || this.defaultTTL\n        };\n        this.cache.set(key, item);\n    }\n    get(key) {\n        const item = this.cache.get(key);\n        if (!item) return null;\n        // Check if expired\n        if (Date.now() - item.timestamp > item.ttl) {\n            this.cache.delete(key);\n            return null;\n        }\n        return item.data;\n    }\n    delete(key) {\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.cache.clear();\n    }\n    // Get cache size\n    size() {\n        return this.cache.size;\n    }\n    // Clean expired items\n    cleanup() {\n        const now = Date.now();\n        let cleaned = 0;\n        for (const entry of Array.from(this.cache.entries())){\n            const [key, item] = entry;\n            if (now - item.timestamp > item.ttl) {\n                this.cache.delete(key);\n                cleaned++;\n            }\n        }\n        return cleaned;\n    }\n    // Get cache statistics\n    stats() {\n        return {\n            size: this.cache.size,\n            keys: Array.from(this.cache.keys()),\n            memoryUsage: JSON.stringify(Array.from(this.cache.entries())).length\n        };\n    }\n    constructor(){\n        this.cache = new Map();\n        this.defaultTTL = 5 * 60 * 1000 // 5 minutes\n        ;\n    }\n}\n// Global cache instance\nconst cache = new MemoryCache();\n// Cache key generators\nconst cacheKeys = {\n    products: (filters)=>`products:${JSON.stringify(filters || {})}`,\n    productById: (id)=>`product:${id}`,\n    categories: ()=>\"categories\",\n    inquiries: (page, limit, status)=>`inquiries:${page}:${limit}:${status || \"all\"}`,\n    healthCheck: ()=>\"health:check\"\n};\n// Cache wrapper for async functions\nfunction withCache(fn, keyGenerator, ttl) {\n    return async (...args)=>{\n        const key = keyGenerator(...args);\n        // Try to get from cache\n        const cached = cache.get(key);\n        if (cached !== null) {\n            return cached;\n        }\n        // Execute function and cache result\n        try {\n            const result = await fn(...args);\n            cache.set(key, result, ttl);\n            return result;\n        } catch (error) {\n            // Don't cache errors\n            throw error;\n        }\n    };\n}\n// Cache invalidation patterns\nconst cacheInvalidation = {\n    // Invalidate all product-related cache\n    products: ()=>{\n        const keys = Array.from(cache[\"cache\"].keys());\n        keys.forEach((key)=>{\n            if (key.startsWith(\"products:\") || key.startsWith(\"product:\")) {\n                cache.delete(key);\n            }\n        });\n    },\n    // Invalidate category cache\n    categories: ()=>{\n        cache.delete(cacheKeys.categories());\n    },\n    // Invalidate inquiry cache\n    inquiries: ()=>{\n        const keys = Array.from(cache[\"cache\"].keys());\n        keys.forEach((key)=>{\n            if (key.startsWith(\"inquiries:\")) {\n                cache.delete(key);\n            }\n        });\n    }\n};\n// Auto cleanup - run every 10 minutes\nif (typeof setInterval !== \"undefined\") {\n    setInterval(()=>{\n        const cleaned = cache.cleanup();\n        if (cleaned > 0) {\n            console.log(`Cache cleanup: removed ${cleaned} expired items`);\n        }\n    }, 10 * 60 * 1000);\n}\n// Response caching helper for API routes\nfunction createCachedResponse(data, ttl = 5 * 60 * 1000, headers = {}) {\n    return {\n        data,\n        headers: {\n            \"Cache-Control\": `public, max-age=${Math.floor(ttl / 1000)}`,\n            \"ETag\": `\"${Date.now()}\"`,\n            ...headers\n        }\n    };\n}\n// Client-side cache (for browser)\nclass ClientCache {\n    set(key, data, ttl = 5 * 60 * 1000) {\n        if (true) return;\n        const item = {\n            data,\n            timestamp: Date.now(),\n            ttl\n        };\n        try {\n            localStorage.setItem(this.prefix + key, JSON.stringify(item));\n        } catch (error) {\n            console.warn(\"Failed to save to localStorage:\", error);\n        }\n    }\n    get(key) {\n        if (true) return null;\n        try {\n            const stored = localStorage.getItem(this.prefix + key);\n            if (!stored) return null;\n            const item = JSON.parse(stored);\n            if (Date.now() - item.timestamp > item.ttl) {\n                localStorage.removeItem(this.prefix + key);\n                return null;\n            }\n            return item.data;\n        } catch (error) {\n            console.warn(\"Failed to read from localStorage:\", error);\n            return null;\n        }\n    }\n    delete(key) {\n        if (true) return;\n        localStorage.removeItem(this.prefix + key);\n    }\n    clear() {\n        if (true) return;\n        const keys = Object.keys(localStorage);\n        keys.forEach((key)=>{\n            if (key.startsWith(this.prefix)) {\n                localStorage.removeItem(key);\n            }\n        });\n    }\n    constructor(){\n        this.prefix = \"wellLi:\";\n    }\n}\nconst clientCache = new ClientCache();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/cache.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/models.ts":
/*!***************************!*\
  !*** ./src/lib/models.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultInquiry: () => (/* binding */ DefaultInquiry),\n/* harmony export */   DefaultProduct: () => (/* binding */ DefaultProduct),\n/* harmony export */   InquiryValidation: () => (/* binding */ InquiryValidation),\n/* harmony export */   ProductValidation: () => (/* binding */ ProductValidation),\n/* harmony export */   isInquiry: () => (/* binding */ isInquiry),\n/* harmony export */   isProduct: () => (/* binding */ isProduct),\n/* harmony export */   isUser: () => (/* binding */ isUser),\n/* harmony export */   sanitizeInquiry: () => (/* binding */ sanitizeInquiry),\n/* harmony export */   sanitizeString: () => (/* binding */ sanitizeString),\n/* harmony export */   validateInquiry: () => (/* binding */ validateInquiry),\n/* harmony export */   validateProduct: () => (/* binding */ validateProduct)\n/* harmony export */ });\n// Type guards\nfunction isInquiry(obj) {\n    return obj && typeof obj.name === \"string\" && typeof obj.email === \"string\" && typeof obj.country === \"string\" && typeof obj.message === \"string\";\n}\nfunction isProduct(obj) {\n    return obj && typeof obj.name === \"string\" && typeof obj.category === \"string\" && typeof obj.description === \"string\" && Array.isArray(obj.images);\n}\nfunction isUser(obj) {\n    return obj && typeof obj.email === \"string\" && typeof obj.name === \"string\" && typeof obj.role === \"string\";\n}\n// Enhanced validation functions\nfunction validateInquiry(data) {\n    const errors = [];\n    // Name validation\n    if (!data.name || typeof data.name !== \"string\") {\n        errors.push(\"Name is required\");\n    } else {\n        const name = data.name.trim();\n        if (name.length < InquiryValidation.name.minLength || name.length > InquiryValidation.name.maxLength) {\n            errors.push(`Name must be between ${InquiryValidation.name.minLength} and ${InquiryValidation.name.maxLength} characters`);\n        }\n        // Check for suspicious patterns\n        if (/[<>\"'&\\{\\}]/.test(name)) {\n            errors.push(\"Name contains invalid characters\");\n        }\n    }\n    // Email validation\n    if (!data.email || typeof data.email !== \"string\") {\n        errors.push(\"Email is required\");\n    } else {\n        const email = data.email.trim().toLowerCase();\n        if (!InquiryValidation.email.pattern.test(email)) {\n            errors.push(\"Invalid email format\");\n        }\n        if (email.length > 254) {\n            errors.push(\"Email address is too long\");\n        }\n    }\n    // Country validation\n    if (!data.country || typeof data.country !== \"string\") {\n        errors.push(\"Country is required\");\n    } else {\n        const country = data.country.trim();\n        if (country.length > InquiryValidation.country.maxLength) {\n            errors.push(`Country must be less than ${InquiryValidation.country.maxLength} characters`);\n        }\n        if (/[<>\"'&\\{\\}]/.test(country)) {\n            errors.push(\"Country contains invalid characters\");\n        }\n    }\n    // Message validation\n    if (!data.message || typeof data.message !== \"string\") {\n        errors.push(\"Message is required\");\n    } else {\n        const message = data.message.trim();\n        if (message.length < InquiryValidation.message.minLength || message.length > InquiryValidation.message.maxLength) {\n            errors.push(`Message must be between ${InquiryValidation.message.minLength} and ${InquiryValidation.message.maxLength} characters`);\n        }\n    }\n    // Optional fields validation\n    if (data.phone && typeof data.phone === \"string\") {\n        const phone = data.phone.trim();\n        if (phone.length > InquiryValidation.phone.maxLength) {\n            errors.push(`Phone must be less than ${InquiryValidation.phone.maxLength} characters`);\n        }\n        // Basic phone format validation\n        if (!/^[+\\d\\s\\-\\(\\)]+$/.test(phone)) {\n            errors.push(\"Phone number contains invalid characters\");\n        }\n    }\n    if (data.company && typeof data.company === \"string\") {\n        const company = data.company.trim();\n        if (company.length > InquiryValidation.company.maxLength) {\n            errors.push(`Company must be less than ${InquiryValidation.company.maxLength} characters`);\n        }\n        if (/[<>\"'&\\{\\}]/.test(company)) {\n            errors.push(\"Company name contains invalid characters\");\n        }\n    }\n    // Additional security checks\n    const suspiciousPatterns = [\n        /<script[^>]*>.*?<\\/script>/gi,\n        /javascript:/gi,\n        /on\\w+\\s*=/gi,\n        /data:(?:text\\/html|application\\/javascript)/gi\n    ];\n    const textFields = [\n        data.name,\n        data.message,\n        data.company,\n        data.productInterest\n    ];\n    for (const field of textFields){\n        if (typeof field === \"string\") {\n            for (const pattern of suspiciousPatterns){\n                if (pattern.test(field)) {\n                    errors.push(\"Invalid content detected\");\n                    break;\n                }\n            }\n        }\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\nfunction validateProduct(data) {\n    const errors = [];\n    // Name validation\n    if (!data.name || typeof data.name !== \"string\") {\n        errors.push(\"Name is required\");\n    } else {\n        const name = data.name.trim();\n        if (name.length < ProductValidation.name.minLength || name.length > ProductValidation.name.maxLength) {\n            errors.push(`Name must be between ${ProductValidation.name.minLength} and ${ProductValidation.name.maxLength} characters`);\n        }\n        if (/[<>\"'&\\{\\}]/.test(name)) {\n            errors.push(\"Name contains invalid characters\");\n        }\n    }\n    // Category validation\n    if (!data.category || typeof data.category !== \"string\") {\n        errors.push(\"Category is required\");\n    } else {\n        const category = data.category.trim();\n        if (category.length > ProductValidation.category.maxLength) {\n            errors.push(`Category must be less than ${ProductValidation.category.maxLength} characters`);\n        }\n        if (/[<>\"'&\\{\\}]/.test(category)) {\n            errors.push(\"Category contains invalid characters\");\n        }\n    }\n    // Description validation\n    if (!data.description || typeof data.description !== \"string\") {\n        errors.push(\"Description is required\");\n    } else {\n        const description = data.description.trim();\n        if (description.length < ProductValidation.description.minLength || description.length > ProductValidation.description.maxLength) {\n            errors.push(`Description must be between ${ProductValidation.description.minLength} and ${ProductValidation.description.maxLength} characters`);\n        }\n    }\n    // Images validation\n    if (!Array.isArray(data.images)) {\n        errors.push(\"Images must be an array\");\n    } else if (data.images.length < ProductValidation.images.minItems) {\n        errors.push(`At least ${ProductValidation.images.minItems} image is required`);\n    } else {\n        // Validate image URLs\n        for (const image of data.images){\n            if (typeof image !== \"string\" || !image.trim()) {\n                errors.push(\"All images must be valid URLs\");\n                break;\n            }\n        }\n    }\n    // Specifications validation\n    if (!data.specifications || typeof data.specifications !== \"object\") {\n        errors.push(\"Specifications are required\");\n    }\n    // Features validation\n    if (!Array.isArray(data.features)) {\n        errors.push(\"Features must be an array\");\n    } else if (data.features.length < ProductValidation.features.minItems) {\n        errors.push(`At least ${ProductValidation.features.minItems} feature is required`);\n    } else {\n        // Validate feature strings\n        for (const feature of data.features){\n            if (typeof feature !== \"string\" || !feature.trim()) {\n                errors.push(\"All features must be valid strings\");\n                break;\n            }\n        }\n    }\n    // Optional fields validation\n    if (data.slug && typeof data.slug === \"string\") {\n        if (!/^[a-z0-9-]+$/.test(data.slug)) {\n            errors.push(\"Slug must contain only lowercase letters, numbers, and hyphens\");\n        }\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n// Enhanced sanitization functions\nfunction sanitizeString(str) {\n    if (typeof str !== \"string\") return \"\";\n    return str.trim().replace(/[<>\"'&]/g, (match)=>{\n        const entities = {\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            '\"': \"&quot;\",\n            \"'\": \"&#x27;\",\n            \"&\": \"&amp;\"\n        };\n        return entities[match] || match;\n    })// Remove potentially dangerous patterns\n    .replace(/javascript:/gi, \"\").replace(/on\\w+\\s*=/gi, \"\").replace(/<script[^>]*>.*?<\\/script>/gi, \"\").replace(/data:(?:text\\/html|application\\/javascript)/gi, \"\")// Limit length to prevent abuse\n    .substring(0, 2000);\n}\nfunction sanitizeInquiry(data) {\n    const sanitized = {\n        name: data.name ? sanitizeString(data.name) : \"\",\n        email: data.email ? sanitizeString(data.email.toLowerCase().trim()) : \"\",\n        phone: data.phone ? sanitizeString(data.phone) : undefined,\n        country: data.country ? sanitizeString(data.country) : \"\",\n        company: data.company ? sanitizeString(data.company) : undefined,\n        productInterest: data.productInterest ? sanitizeString(data.productInterest) : undefined,\n        productId: data.productId ? sanitizeString(data.productId) : undefined,\n        productName: data.productName ? sanitizeString(data.productName) : undefined,\n        quantity: data.quantity ? sanitizeString(data.quantity) : undefined,\n        message: data.message ? sanitizeString(data.message) : \"\"\n    };\n    // Remove empty optional fields\n    Object.keys(sanitized).forEach((key)=>{\n        if (sanitized[key] === undefined || sanitized[key] === \"\") {\n            if (key !== \"name\" && key !== \"email\" && key !== \"country\" && key !== \"message\") {\n                delete sanitized[key];\n            }\n        }\n    });\n    return sanitized;\n}\n// Validation schemas (basic)\nconst InquiryValidation = {\n    name: {\n        required: true,\n        minLength: 2,\n        maxLength: 100\n    },\n    email: {\n        required: true,\n        pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    },\n    phone: {\n        required: false,\n        maxLength: 20\n    },\n    country: {\n        required: true,\n        maxLength: 50\n    },\n    company: {\n        required: false,\n        maxLength: 100\n    },\n    productInterest: {\n        required: false,\n        maxLength: 50\n    },\n    productId: {\n        required: false,\n        maxLength: 50\n    },\n    productName: {\n        required: false,\n        maxLength: 200\n    },\n    quantity: {\n        required: false,\n        maxLength: 50\n    },\n    message: {\n        required: true,\n        minLength: 10,\n        maxLength: 2000\n    }\n};\nconst ProductValidation = {\n    name: {\n        required: true,\n        minLength: 3,\n        maxLength: 200\n    },\n    category: {\n        required: true,\n        maxLength: 50\n    },\n    description: {\n        required: true,\n        minLength: 10,\n        maxLength: 500\n    },\n    images: {\n        required: true,\n        minItems: 1\n    },\n    specifications: {\n        required: true\n    },\n    features: {\n        required: true,\n        minItems: 1\n    }\n};\n// Default values\nconst DefaultInquiry = {\n    status: \"new\",\n    priority: \"medium\",\n    source: \"website\",\n    notes: [],\n    createdAt: new Date(),\n    updatedAt: new Date()\n};\nconst DefaultProduct = {\n    featured: false,\n    active: true,\n    sortOrder: 0,\n    createdAt: new Date(),\n    updatedAt: new Date()\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/models.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mongodb.ts":
/*!****************************!*\
  !*** ./src/lib/mongodb.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COLLECTIONS: () => (/* binding */ COLLECTIONS),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getDatabase: () => (/* binding */ getDatabase),\n/* harmony export */   initializeDatabase: () => (/* binding */ initializeDatabase),\n/* harmony export */   testConnection: () => (/* binding */ testConnection)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n// 【重点】MongoDB数据库连接配置 - 管理数据库连接和操作\n// 这个文件是整个应用的数据库核心，负责建立和维护MongoDB连接\n // MongoDB官方驱动\n// 【重点】环境变量检查 - 确保数据库连接字符串存在\nif (false) {}\n// 【重点】数据库连接配置 - 从环境变量获取连接字符串\nconst uri = \"mongodb://localhost:27017/wellicases\";\n// 【重点】连接选项配置 - 优化数据库连接性能和稳定性\nconst options = {\n    maxPoolSize: 10,\n    serverSelectionTimeoutMS: 5000,\n    socketTimeoutMS: 45000,\n    family: 4\n};\n// 【重点】客户端连接管理 - 根据环境采用不同的连接策略\nlet client;\nlet clientPromise;\nif (true) {\n    // 【重点】开发环境连接策略 - 使用全局变量避免热重载时重复连接\n    // 在开发模式下，使用全局变量保存连接，避免HMR（热模块替换）导致的重复连接\n    let globalWithMongo = global;\n    if (!globalWithMongo._mongoClientPromise) {\n        client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, options) // 创建新的MongoDB客户端\n        ;\n        globalWithMongo._mongoClientPromise = client.connect() // 建立连接并保存到全局变量\n        ;\n    }\n    clientPromise = globalWithMongo._mongoClientPromise // 使用已存在的连接\n    ;\n} else {}\n// 【重点】导出客户端连接Promise - 在模块间共享数据库连接\n// 通过在独立模块中导出，可以在不同函数间共享同一个客户端连接\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n// 【重点】数据库辅助函数 - 获取数据库实例\nasync function getDatabase() {\n    try {\n        const client = await clientPromise // 等待客户端连接完成\n        ;\n        return client.db(\"wellLiCases\") // 返回指定数据库实例\n        ;\n    } catch (error) {\n        // 【重点】连接错误处理 - 记录错误并抛出友好的错误信息\n        console.error(\"Failed to connect to database:\", error);\n        throw new Error(\"Database connection failed\") // 抛出数据库连接失败错误\n        ;\n    }\n}\n// 【重点】集合名称常量 - 统一管理数据库集合名称\n// 使用常量避免硬编码，便于维护和重构\nconst COLLECTIONS = {\n    INQUIRIES: \"inquiries\",\n    PRODUCTS: \"products\",\n    USERS: \"users\",\n    SETTINGS: \"settings\" // 系统设置集合\n};\n// 【重点】增强的数据库连接测试 - 带重试逻辑的连接检查\nasync function testConnection(retries = 3) {\n    for(let i = 0; i < retries; i++){\n        try {\n            const client = await clientPromise // 获取客户端连接\n            ;\n            await client.db(\"admin\").command({\n                ping: 1\n            }) // 发送ping命令测试连接\n            ;\n            console.log(\"✅ MongoDB connection successful\") // 连接成功\n            ;\n            return true;\n        } catch (error) {\n            console.error(`❌ MongoDB connection attempt ${i + 1} failed:`, error);\n            if (i === retries - 1) {\n                // 【重点】所有重试都失败 - 记录最终失败状态\n                console.error(\"❌ All MongoDB connection attempts failed\");\n                return false;\n            }\n            // 【重点】等待后重试 - 递增延迟避免频繁重试\n            await new Promise((resolve)=>setTimeout(resolve, 1000 * (i + 1)));\n        }\n    }\n    return false;\n}\n// 【重点】数据库初始化 - 创建索引优化查询性能\nasync function initializeDatabase() {\n    try {\n        const db = await getDatabase() // 获取数据库实例\n        ;\n        // 【重点】咨询集合索引 - 优化常用查询字段的性能\n        const inquiriesIndexes = [\n            {\n                key: {\n                    email: 1\n                }\n            },\n            {\n                key: {\n                    createdAt: -1\n                }\n            },\n            {\n                key: {\n                    country: 1\n                }\n            },\n            {\n                key: {\n                    productInterest: 1\n                }\n            },\n            {\n                key: {\n                    status: 1\n                }\n            } // 状态索引：用于筛选处理状态\n        ];\n        const productsIndexes = [\n            {\n                key: {\n                    name: \"text\",\n                    description: \"text\"\n                }\n            },\n            {\n                key: {\n                    category: 1\n                }\n            },\n            {\n                key: {\n                    featured: 1\n                }\n            },\n            {\n                key: {\n                    active: 1\n                }\n            },\n            {\n                key: {\n                    slug: 1\n                },\n                unique: true\n            } // 唯一slug索引：确保URL标识符唯一性\n        ];\n        // 【重点】并行创建索引 - 同时为多个集合创建索引提高效率\n        await Promise.all([\n            db.collection(COLLECTIONS.INQUIRIES).createIndexes(inquiriesIndexes).catch((err)=>console.warn(\"Failed to create inquiries indexes:\", err)),\n            db.collection(COLLECTIONS.PRODUCTS).createIndexes(productsIndexes).catch((err)=>console.warn(\"Failed to create products indexes:\", err)) // 产品集合索引创建失败处理\n        ]);\n        console.log(\"✅ Database indexes created successfully\") // 索引创建成功\n        ;\n    } catch (error) {\n        // 【重点】数据库初始化错误处理 - 避免应用崩溃\n        console.error(\"❌ Failed to initialize database:\", error);\n        // 不抛出错误以防止应用崩溃 - 应用可以在没有索引的情况下运行\n        console.warn(\"Database initialization failed, continuing without indexes\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mongodb.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/rate-limiter.ts":
/*!*********************************!*\
  !*** ./src/lib/rate-limiter.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiLimiter: () => (/* binding */ apiLimiter),\n/* harmony export */   contactFormLimiter: () => (/* binding */ contactFormLimiter),\n/* harmony export */   createRateLimitMiddleware: () => (/* binding */ createRateLimitMiddleware),\n/* harmony export */   generateCSRFToken: () => (/* binding */ generateCSRFToken),\n/* harmony export */   inquiryFormLimiter: () => (/* binding */ inquiryFormLimiter),\n/* harmony export */   isValidEmail: () => (/* binding */ isValidEmail),\n/* harmony export */   isValidIP: () => (/* binding */ isValidIP),\n/* harmony export */   isValidPhoneNumber: () => (/* binding */ isValidPhoneNumber),\n/* harmony export */   sanitizeFilename: () => (/* binding */ sanitizeFilename),\n/* harmony export */   sanitizeURL: () => (/* binding */ sanitizeURL),\n/* harmony export */   securityHeaders: () => (/* binding */ securityHeaders),\n/* harmony export */   validateCSRFToken: () => (/* binding */ validateCSRFToken),\n/* harmony export */   validatePasswordStrength: () => (/* binding */ validatePasswordStrength)\n/* harmony export */ });\n// Rate limiting utility for API endpoints\nclass RateLimiter {\n    constructor(config){\n        this.store = {};\n        this.config = config;\n        // Clean up expired entries every 5 minutes\n        setInterval(()=>{\n            this.cleanup();\n        }, 5 * 60 * 1000);\n    }\n    cleanup() {\n        const now = Date.now();\n        Object.keys(this.store).forEach((key)=>{\n            if (this.store[key].resetTime <= now) {\n                delete this.store[key];\n            }\n        });\n    }\n    getKey(request) {\n        if (this.config.keyGenerator) {\n            return this.config.keyGenerator(request);\n        }\n        // Default key: IP address\n        return request.ip || request.headers.get(\"x-forwarded-for\") || request.headers.get(\"x-real-ip\") || \"unknown\";\n    }\n    check(request) {\n        const key = this.getKey(request);\n        const now = Date.now();\n        const resetTime = now + this.config.windowMs;\n        // Initialize or reset if window expired\n        if (!this.store[key] || this.store[key].resetTime <= now) {\n            this.store[key] = {\n                count: 0,\n                resetTime\n            };\n        }\n        const current = this.store[key];\n        const allowed = current.count < this.config.maxRequests;\n        if (allowed) {\n            current.count++;\n        }\n        return {\n            allowed,\n            limit: this.config.maxRequests,\n            remaining: Math.max(0, this.config.maxRequests - current.count),\n            resetTime: current.resetTime\n        };\n    }\n}\n// Pre-configured rate limiters\nconst contactFormLimiter = new RateLimiter({\n    windowMs: 15 * 60 * 1000,\n    maxRequests: 5\n});\nconst inquiryFormLimiter = new RateLimiter({\n    windowMs: 15 * 60 * 1000,\n    maxRequests: 10\n});\nconst apiLimiter = new RateLimiter({\n    windowMs: 1 * 60 * 1000,\n    maxRequests: 60\n});\n// Rate limit middleware factory\nfunction createRateLimitMiddleware(limiter) {\n    return (request)=>{\n        const result = limiter.check(request);\n        if (!result.allowed) {\n            const resetTimeSeconds = Math.ceil((result.resetTime - Date.now()) / 1000);\n            throw new Error(`Rate limit exceeded. Try again in ${resetTimeSeconds} seconds.`);\n        }\n        return result;\n    };\n}\n// CSRF protection\nfunction generateCSRFToken() {\n    const array = new Uint8Array(32);\n    crypto.getRandomValues(array);\n    return Array.from(array, (byte)=>byte.toString(16).padStart(2, \"0\")).join(\"\");\n}\nfunction validateCSRFToken(token, sessionToken) {\n    if (!token || !sessionToken) return false;\n    return token === sessionToken;\n}\n// Input sanitization helpers\nfunction sanitizeFilename(filename) {\n    return filename.replace(/[^a-zA-Z0-9.-]/g, \"_\").replace(/^\\.+/, \"\").replace(/\\.+$/, \"\").substring(0, 255);\n}\nfunction sanitizeURL(url) {\n    try {\n        const parsed = new URL(url);\n        // Only allow http and https protocols\n        if (![\n            \"http:\",\n            \"https:\"\n        ].includes(parsed.protocol)) {\n            throw new Error(\"Invalid protocol\");\n        }\n        return parsed.toString();\n    } catch  {\n        throw new Error(\"Invalid URL\");\n    }\n}\nfunction isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email) && email.length <= 254;\n}\nfunction isValidPhoneNumber(phone) {\n    // Basic international phone number validation\n    const phoneRegex = /^[+]?[\\d\\s\\-\\(\\)]{7,20}$/;\n    return phoneRegex.test(phone);\n}\n// Content Security Policy headers\nconst securityHeaders = {\n    \"X-Frame-Options\": \"DENY\",\n    \"X-Content-Type-Options\": \"nosniff\",\n    \"Referrer-Policy\": \"origin-when-cross-origin\",\n    \"X-DNS-Prefetch-Control\": \"on\",\n    \"Strict-Transport-Security\": \"max-age=31536000; includeSubDomains\",\n    \"Permissions-Policy\": \"geolocation=(), microphone=(), camera=()\",\n    \"Content-Security-Policy\": \"default-src 'self'; \" + \"script-src 'self' 'unsafe-inline' 'unsafe-eval'; \" + \"style-src 'self' 'unsafe-inline'; \" + \"img-src 'self' data: https:; \" + \"font-src 'self'; \" + \"connect-src 'self'; \" + \"frame-ancestors 'none';\"\n};\n// IP address validation\nfunction isValidIP(ip) {\n    const ipv4Regex = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\n    const ipv6Regex = /^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$/;\n    return ipv4Regex.test(ip) || ipv6Regex.test(ip);\n}\n// Password strength validation\nfunction validatePasswordStrength(password) {\n    const issues = [];\n    let score = 0;\n    if (password.length < 8) {\n        issues.push(\"Password must be at least 8 characters long\");\n    } else {\n        score += 1;\n    }\n    if (!/[a-z]/.test(password)) {\n        issues.push(\"Password must contain at least one lowercase letter\");\n    } else {\n        score += 1;\n    }\n    if (!/[A-Z]/.test(password)) {\n        issues.push(\"Password must contain at least one uppercase letter\");\n    } else {\n        score += 1;\n    }\n    if (!/\\d/.test(password)) {\n        issues.push(\"Password must contain at least one number\");\n    } else {\n        score += 1;\n    }\n    if (!/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n        issues.push(\"Password must contain at least one special character\");\n    } else {\n        score += 1;\n    }\n    return {\n        isValid: issues.length === 0,\n        score,\n        issues\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/rate-limiter.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/seed-data.ts":
/*!******************************!*\
  !*** ./src/lib/seed-data.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAndSeedDatabase: () => (/* binding */ checkAndSeedDatabase),\n/* harmony export */   sampleProducts: () => (/* binding */ sampleProducts),\n/* harmony export */   seedDatabase: () => (/* binding */ seedDatabase)\n/* harmony export */ });\n/* harmony import */ var _mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n// 【重点】数据库种子数据文件 - 为数据库提供初始示例数据\n// 这个文件包含了NANUK保护箱网站的所有示例产品和分类数据\n // 数据库连接和集合管理\n// 【重点】示例产品数据 - 包含完整的产品信息用于网站展示\n// 每个产品包含详细的规格、特性、应用场景等信息\nconst sampleProducts = [\n    {\n        // 【重点】NANUK 910 小型保护箱 - 轻量级专业设备保护\n        name: \"NANUK 910 Protective Case\",\n        slug: \"nanuk-910-protective-case\",\n        category: \"Small Cases\",\n        subcategory: \"Handheld Cases\",\n        description: \"Ultra-lightweight and virtually unbreakable protective case for small equipment.\",\n        longDescription: \"The NANUK 910 is designed for professionals who demand the highest level of protection for their valuable equipment. Built with NK-7 resin, this case offers superior impact resistance while maintaining a lightweight profile.\",\n        images: [\n            \"/images/products/nanuk-910-1.jpg\",\n            \"/images/products/nanuk-910-2.jpg\",\n            \"/images/products/nanuk-910-3.jpg\" // 内部结构图\n        ],\n        specifications: {\n            \"External Dimensions\": '13.8\" \\xd7 11.6\" \\xd7 6.0\" (35.1 \\xd7 29.5 \\xd7 15.2 cm)',\n            \"Internal Dimensions\": '12.0\" \\xd7 9.5\" \\xd7 4.5\" (30.5 \\xd7 24.1 \\xd7 11.4 cm)',\n            \"Weight\": \"3.3 lbs (1.5 kg)\",\n            \"Volume\": \"2.4 L\",\n            \"Material\": \"NK-7 Resin\",\n            \"Protection Rating\": \"IP67\",\n            \"Temperature Range\": \"-40\\xb0F to +140\\xb0F (-40\\xb0C to +60\\xb0C)\",\n            \"Pressure Relief\": \"Automatic\" // 自动压力释放\n        },\n        features: [\n            \"Waterproof and dustproof (IP67)\",\n            \"Impact resistant NK-7 resin shell\",\n            \"PowerClaw superior latching system\",\n            \"Integrated bezel system\",\n            \"Automatic pressure relief valve\",\n            \"Soft grip ergonomic handle\",\n            \"Stainless steel hardware\",\n            \"Lifetime warranty\" // 终身保修\n        ],\n        applications: [\n            \"Photography Equipment\",\n            \"Electronic Devices\",\n            \"Medical Instruments\",\n            \"Scientific Equipment\",\n            \"Military & Defense\",\n            \"Industrial Tools\" // 工业工具\n        ],\n        certifications: [\n            \"IP67 Waterproof Rating\",\n            \"MIL-STD-810G\",\n            \"STANAG 4280\",\n            \"ATA 300\",\n            \"IATA Compliant\"\n        ],\n        colors: [\n            {\n                name: \"Black\",\n                code: \"#000000\"\n            },\n            {\n                name: \"Orange\",\n                code: \"#FF6B35\"\n            },\n            {\n                name: \"Yellow\",\n                code: \"#FFD23F\"\n            },\n            {\n                name: \"Olive\",\n                code: \"#8B8C7A\"\n            }\n        ],\n        accessories: [\n            \"Foam Insert Set\",\n            \"Padded Divider Set\",\n            \"Shoulder Strap\",\n            \"Wheels Kit\",\n            \"TSA Lock\"\n        ],\n        dimensions: {\n            external: {\n                length: 35.1,\n                width: 29.5,\n                height: 15.2,\n                unit: \"cm\"\n            },\n            internal: {\n                length: 30.5,\n                width: 24.1,\n                height: 11.4,\n                unit: \"cm\"\n            }\n        },\n        weight: {\n            value: 1.5,\n            unit: \"kg\"\n        },\n        volume: {\n            value: 2.4,\n            unit: \"L\"\n        },\n        protectionRating: \"IP67\",\n        temperatureRange: {\n            min: -40,\n            max: 60,\n            unit: \"C\"\n        },\n        featured: true,\n        active: true,\n        seoTitle: \"NANUK 910 Protective Case - Waterproof & Impact Resistant\",\n        seoDescription: \"Ultra-lightweight NANUK 910 protective case with IP67 rating. Perfect for photography, electronics, and professional equipment protection.\",\n        seoKeywords: [\n            \"protective case\",\n            \"waterproof case\",\n            \"impact resistant\",\n            \"photography case\",\n            \"equipment protection\"\n        ],\n        sortOrder: 1\n    },\n    {\n        name: \"NANUK 920 Professional Case\",\n        slug: \"nanuk-920-professional-case\",\n        category: \"Medium Cases\",\n        subcategory: \"Professional Cases\",\n        description: \"Medium-sized professional case with customizable foam interior for versatile equipment protection.\",\n        longDescription: \"The NANUK 920 offers the perfect balance of size and protection for professional equipment. With its modular foam system and robust construction, it adapts to your specific needs.\",\n        images: [\n            \"/images/products/nanuk-920-1.jpg\",\n            \"/images/products/nanuk-920-2.jpg\",\n            \"/images/products/nanuk-920-3.jpg\"\n        ],\n        specifications: {\n            \"External Dimensions\": '16.7\" \\xd7 13.0\" \\xd7 6.9\" (42.4 \\xd7 33.0 \\xd7 17.5 cm)',\n            \"Internal Dimensions\": '14.8\" \\xd7 10.9\" \\xd7 5.4\" (37.6 \\xd7 27.7 \\xd7 13.7 cm)',\n            \"Weight\": \"4.8 lbs (2.2 kg)\",\n            \"Volume\": \"4.2 L\",\n            \"Material\": \"NK-7 Resin\",\n            \"Protection Rating\": \"IP67\",\n            \"Temperature Range\": \"-40\\xb0F to +140\\xb0F (-40\\xb0C to +60\\xb0C)\",\n            \"Pressure Relief\": \"Automatic\"\n        },\n        features: [\n            \"Waterproof and dustproof (IP67)\",\n            \"Impact resistant NK-7 resin shell\",\n            \"PowerClaw superior latching system\",\n            \"Modular foam system\",\n            \"Automatic pressure relief valve\",\n            \"Comfortable carry handle\",\n            \"Stainless steel hardware\",\n            \"Lifetime warranty\"\n        ],\n        applications: [\n            \"Camera Equipment\",\n            \"Drone Storage\",\n            \"Medical Devices\",\n            \"Test Equipment\",\n            \"Audio Equipment\",\n            \"Tool Storage\"\n        ],\n        certifications: [\n            \"IP67 Waterproof Rating\",\n            \"MIL-STD-810G\",\n            \"STANAG 4280\",\n            \"ATA 300\"\n        ],\n        colors: [\n            {\n                name: \"Black\",\n                code: \"#000000\"\n            },\n            {\n                name: \"Orange\",\n                code: \"#FF6B35\"\n            },\n            {\n                name: \"Yellow\",\n                code: \"#FFD23F\"\n            }\n        ],\n        accessories: [\n            \"Modular Foam Set\",\n            \"Padded Dividers\",\n            \"Shoulder Strap\",\n            \"Lid Organizer\"\n        ],\n        dimensions: {\n            external: {\n                length: 42.4,\n                width: 33.0,\n                height: 17.5,\n                unit: \"cm\"\n            },\n            internal: {\n                length: 37.6,\n                width: 27.7,\n                height: 13.7,\n                unit: \"cm\"\n            }\n        },\n        weight: {\n            value: 2.2,\n            unit: \"kg\"\n        },\n        volume: {\n            value: 4.2,\n            unit: \"L\"\n        },\n        protectionRating: \"IP67\",\n        temperatureRange: {\n            min: -40,\n            max: 60,\n            unit: \"C\"\n        },\n        featured: true,\n        active: true,\n        seoTitle: \"NANUK 920 Professional Case - Medium Protective Case\",\n        seoDescription: \"Professional NANUK 920 case with modular foam system. Ideal for cameras, drones, and professional equipment.\",\n        seoKeywords: [\n            \"professional case\",\n            \"camera case\",\n            \"drone case\",\n            \"modular foam\",\n            \"equipment protection\"\n        ],\n        sortOrder: 2\n    },\n    {\n        name: \"WL-1200 Medical Antimicrobial Case\",\n        slug: \"wl-1200-medical-antimicrobial-case\",\n        category: \"medical\",\n        subcategory: \"Medical Cases\",\n        description: \"Specialized antimicrobial case designed for medical equipment with advanced sterilization features.\",\n        longDescription: \"The WL-1200 features antimicrobial coating and specialized sealing systems designed specifically for medical environments. Perfect for protecting sensitive medical instruments and maintaining sterile conditions.\",\n        images: [\n            \"/images/products/wl-1200.svg\"\n        ],\n        specifications: {\n            \"External Dimensions\": '12.0\" \\xd7 8.0\" \\xd7 4.0\"',\n            \"Weight\": \"2.8 lbs (1.3 kg)\",\n            \"Material\": \"Medical-Grade Polymer\",\n            \"Protection Rating\": \"IP65 (Medical Grade)\",\n            \"Antimicrobial Coating\": \"Yes\",\n            \"Sterilization Compatible\": \"Autoclave Safe\"\n        },\n        features: [\n            \"Antimicrobial Surface Coating\",\n            \"Autoclave Compatible\",\n            \"Medical-Grade Materials\",\n            \"Precision Foam Inserts\",\n            \"Tamper-Evident Seals\",\n            \"Easy Decontamination\"\n        ],\n        applications: [\n            \"Surgical Instruments\",\n            \"Medical Devices\",\n            \"Laboratory Equipment\",\n            \"Diagnostic Tools\",\n            \"Emergency Medical Supplies\"\n        ],\n        certifications: [\n            \"FDA Approved Materials\",\n            \"ISO 13485 Compliant\",\n            \"Medical Device Regulation (MDR)\"\n        ],\n        colors: [\n            {\n                name: \"Medical White\",\n                code: \"#FFFFFF\"\n            },\n            {\n                name: \"Hospital Blue\",\n                code: \"#4A90E2\"\n            }\n        ],\n        dimensions: {\n            external: {\n                length: 30.5,\n                width: 20.3,\n                height: 10.2,\n                unit: \"cm\"\n            },\n            internal: {\n                length: 28.0,\n                width: 18.0,\n                height: 8.5,\n                unit: \"cm\"\n            }\n        },\n        weight: {\n            value: 1.3,\n            unit: \"kg\"\n        },\n        protectionRating: \"IP65\",\n        featured: true,\n        active: true,\n        seoTitle: \"WL-1200 Medical Antimicrobial Case - Sterile Equipment Protection\",\n        seoDescription: \"Medical-grade antimicrobial case for surgical instruments and medical devices. Autoclave safe with FDA approved materials.\",\n        seoKeywords: [\n            \"medical case\",\n            \"antimicrobial\",\n            \"surgical instruments\",\n            \"autoclave safe\",\n            \"medical equipment\"\n        ],\n        sortOrder: 3\n    },\n    {\n        name: \"WL-2800 Industrial Heavy Duty Case\",\n        slug: \"wl-2800-industrial-heavy-duty-case\",\n        category: \"industrial\",\n        subcategory: \"Industrial Cases\",\n        description: \"Heavy-duty industrial case built for extreme environments and maximum equipment protection.\",\n        longDescription: \"The WL-2800 is engineered for the harshest industrial environments. With reinforced construction and advanced shock absorption, it provides uncompromising protection for critical industrial equipment.\",\n        images: [\n            \"/images/products/wl-2800.svg\"\n        ],\n        specifications: {\n            \"External Dimensions\": '28.0\" \\xd7 18.0\" \\xd7 12.0\"',\n            \"Weight\": \"12.5 lbs (5.7 kg)\",\n            \"Material\": \"Industrial-Grade Composite\",\n            \"Protection Rating\": \"IP68 (Submersible)\",\n            \"Load Capacity\": \"150 lbs (68 kg)\",\n            \"Drop Test\": \"MIL-STD-810G\"\n        },\n        features: [\n            \"Extreme Impact Resistance\",\n            \"Submersible Design (IP68)\",\n            \"Reinforced Corner Protection\",\n            \"Heavy-Duty Latching System\",\n            \"Pressure Equalization Valve\",\n            \"Industrial Wheels and Handle\"\n        ],\n        applications: [\n            \"Heavy Machinery Parts\",\n            \"Industrial Tools\",\n            \"Mining Equipment\",\n            \"Oil & Gas Instruments\",\n            \"Construction Equipment\",\n            \"Calibration Instruments\"\n        ],\n        certifications: [\n            \"IP68 Waterproof Rating\",\n            \"MIL-STD-810G\",\n            \"OSHA Compliant\",\n            \"Industrial Safety Standards\"\n        ],\n        colors: [\n            {\n                name: \"Industrial Black\",\n                code: \"#1A1A1A\"\n            },\n            {\n                name: \"Safety Orange\",\n                code: \"#FF6B35\"\n            },\n            {\n                name: \"High-Vis Yellow\",\n                code: \"#FFD23F\"\n            }\n        ],\n        dimensions: {\n            external: {\n                length: 71.1,\n                width: 45.7,\n                height: 30.5,\n                unit: \"cm\"\n            },\n            internal: {\n                length: 66.0,\n                width: 40.6,\n                height: 27.9,\n                unit: \"cm\"\n            }\n        },\n        weight: {\n            value: 5.7,\n            unit: \"kg\"\n        },\n        protectionRating: \"IP68\",\n        featured: true,\n        active: true,\n        seoTitle: \"WL-2800 Industrial Heavy Duty Case - Extreme Protection\",\n        seoDescription: \"Heavy-duty industrial case with IP68 rating. Built for extreme environments and heavy industrial equipment protection.\",\n        seoKeywords: [\n            \"industrial case\",\n            \"heavy duty\",\n            \"waterproof\",\n            \"impact resistant\",\n            \"industrial equipment\"\n        ],\n        sortOrder: 4\n    },\n    {\n        name: \"WL-1600 Studio Case\",\n        slug: \"wl-1600-studio-case\",\n        category: \"photography\",\n        subcategory: \"Studio Cases\",\n        description: \"Professional studio case with customizable compartments for photography and video production equipment.\",\n        longDescription: \"The WL-1600 is designed specifically for studio environments. With its modular interior system and professional appearance, it provides organized storage and easy access to photography and video equipment.\",\n        images: [\n            \"/images/products/wl-1600.svg\"\n        ],\n        specifications: {\n            \"External Dimensions\": '16.0\" \\xd7 12.0\" \\xd7 8.0\"',\n            \"Weight\": \"5.5 lbs (2.5 kg)\",\n            \"Material\": \"Professional-Grade ABS\",\n            \"Protection Rating\": \"IP54 (Splash Resistant)\",\n            \"Interior System\": \"Modular Compartments\",\n            \"Wheels\": \"Silent Rolling\"\n        },\n        features: [\n            \"Modular Interior System\",\n            \"Silent Wheels\",\n            \"Professional Appearance\",\n            \"Cable Management\",\n            \"Quick Access Design\",\n            \"Stackable Design\"\n        ],\n        applications: [\n            \"Studio Lighting\",\n            \"Camera Accessories\",\n            \"Audio Equipment\",\n            \"Production Tools\",\n            \"Video Equipment\",\n            \"Photography Gear\"\n        ],\n        certifications: [\n            \"Professional Studio Standards\",\n            \"IP54 Splash Resistant\"\n        ],\n        colors: [\n            {\n                name: \"Studio Black\",\n                code: \"#000000\"\n            },\n            {\n                name: \"Professional Gray\",\n                code: \"#6B7280\"\n            }\n        ],\n        dimensions: {\n            external: {\n                length: 40.6,\n                width: 30.5,\n                height: 20.3,\n                unit: \"cm\"\n            },\n            internal: {\n                length: 37.5,\n                width: 27.9,\n                height: 17.8,\n                unit: \"cm\"\n            }\n        },\n        weight: {\n            value: 2.5,\n            unit: \"kg\"\n        },\n        protectionRating: \"IP54\",\n        featured: true,\n        active: true,\n        seoTitle: \"WL-1600 Studio Case - Professional Photography Equipment Storage\",\n        seoDescription: \"Professional studio case with modular compartments for photography and video production equipment. Silent wheels and quick access design.\",\n        seoKeywords: [\n            \"studio case\",\n            \"photography case\",\n            \"video equipment\",\n            \"modular storage\",\n            \"professional gear\"\n        ],\n        sortOrder: 5\n    },\n    {\n        name: \"NANUK 930 Heavy Duty Case\",\n        slug: \"nanuk-930-heavy-duty-case\",\n        category: \"Large Cases\",\n        subcategory: \"Heavy Duty Cases\",\n        description: \"Large heavy-duty case designed for maximum protection of valuable and sensitive equipment.\",\n        longDescription: \"The NANUK 930 is built for the most demanding environments. Its robust construction and advanced protection features make it the choice for military, aerospace, and industrial applications.\",\n        images: [\n            \"/images/products/nanuk-930-1.jpg\",\n            \"/images/products/nanuk-930-2.jpg\",\n            \"/images/products/nanuk-930-3.jpg\"\n        ],\n        specifications: {\n            \"External Dimensions\": '18.8\" \\xd7 14.6\" \\xd7 7.6\" (47.8 \\xd7 37.1 \\xd7 19.3 cm)',\n            \"Internal Dimensions\": '16.9\" \\xd7 12.6\" \\xd7 6.1\" (42.9 \\xd7 32.0 \\xd7 15.5 cm)',\n            \"Weight\": \"6.2 lbs (2.8 kg)\",\n            \"Volume\": \"6.8 L\",\n            \"Material\": \"NK-7 Resin\",\n            \"Protection Rating\": \"IP67\",\n            \"Temperature Range\": \"-40\\xb0F to +140\\xb0F (-40\\xb0C to +60\\xb0C)\",\n            \"Pressure Relief\": \"Automatic\"\n        },\n        features: [\n            \"Waterproof and dustproof (IP67)\",\n            \"Impact resistant NK-7 resin shell\",\n            \"PowerClaw superior latching system\",\n            \"Reinforced corners\",\n            \"Automatic pressure relief valve\",\n            \"Heavy-duty handle\",\n            \"Military-grade hardware\",\n            \"Lifetime warranty\"\n        ],\n        applications: [\n            \"Military Equipment\",\n            \"Aerospace Components\",\n            \"Industrial Instruments\",\n            \"Broadcasting Equipment\",\n            \"Scientific Instruments\",\n            \"Emergency Response\"\n        ],\n        certifications: [\n            \"IP67 Waterproof Rating\",\n            \"MIL-STD-810G\",\n            \"STANAG 4280\",\n            \"ATA 300\",\n            \"NATO Approved\"\n        ],\n        colors: [\n            {\n                name: \"Black\",\n                code: \"#000000\"\n            },\n            {\n                name: \"Olive\",\n                code: \"#8B8C7A\"\n            }\n        ],\n        accessories: [\n            \"Military Foam Kit\",\n            \"Shock Mount System\",\n            \"Wheels Kit\",\n            \"Security Lock\"\n        ],\n        dimensions: {\n            external: {\n                length: 47.8,\n                width: 37.1,\n                height: 19.3,\n                unit: \"cm\"\n            },\n            internal: {\n                length: 42.9,\n                width: 32.0,\n                height: 15.5,\n                unit: \"cm\"\n            }\n        },\n        weight: {\n            value: 2.8,\n            unit: \"kg\"\n        },\n        volume: {\n            value: 6.8,\n            unit: \"L\"\n        },\n        protectionRating: \"IP67\",\n        temperatureRange: {\n            min: -40,\n            max: 60,\n            unit: \"C\"\n        },\n        featured: true,\n        active: true,\n        seoTitle: \"NANUK 930 Heavy Duty Case - Military Grade Protection\",\n        seoDescription: \"Heavy-duty NANUK 930 case with military-grade protection. Perfect for aerospace, military, and industrial applications.\",\n        seoKeywords: [\n            \"heavy duty case\",\n            \"military case\",\n            \"aerospace case\",\n            \"industrial protection\",\n            \"rugged case\"\n        ],\n        sortOrder: 3\n    },\n    {\n        name: \"NANUK 915 Tool Case\",\n        slug: \"nanuk-915-tool-case\",\n        category: \"Tool Cases\",\n        subcategory: \"Professional Tools\",\n        description: \"Specialized tool case with organized compartments for professional tool storage and transport.\",\n        longDescription: \"The NANUK 915 is specifically designed for tool organization and protection. Its intelligent layout and durable construction make it perfect for professionals who need their tools protected and organized.\",\n        images: [\n            \"/images/products/nanuk-915-1.jpg\",\n            \"/images/products/nanuk-915-2.jpg\"\n        ],\n        specifications: {\n            \"External Dimensions\": '15.0\" \\xd7 12.0\" \\xd7 6.5\" (38.1 \\xd7 30.5 \\xd7 16.5 cm)',\n            \"Internal Dimensions\": '13.2\" \\xd7 10.0\" \\xd7 5.0\" (33.5 \\xd7 25.4 \\xd7 12.7 cm)',\n            \"Weight\": \"3.8 lbs (1.7 kg)\",\n            \"Volume\": \"3.2 L\",\n            \"Material\": \"NK-7 Resin\",\n            \"Protection Rating\": \"IP65\",\n            \"Temperature Range\": \"-20\\xb0F to +120\\xb0F (-29\\xb0C to +49\\xb0C)\"\n        },\n        features: [\n            \"Waterproof and dustproof (IP65)\",\n            \"Impact resistant construction\",\n            \"Organized tool compartments\",\n            \"Secure latching system\",\n            \"Comfortable grip handle\",\n            \"Tool retention system\",\n            \"Corrosion resistant hardware\"\n        ],\n        applications: [\n            \"Professional Tools\",\n            \"Precision Instruments\",\n            \"Electronic Tools\",\n            \"Maintenance Equipment\",\n            \"Field Service Tools\",\n            \"Repair Kits\"\n        ],\n        certifications: [\n            \"IP65 Protection Rating\",\n            \"Professional Tool Standard\"\n        ],\n        colors: [\n            {\n                name: \"Black\",\n                code: \"#000000\"\n            },\n            {\n                name: \"Red\",\n                code: \"#DC2626\"\n            }\n        ],\n        accessories: [\n            \"Tool Organizer Inserts\",\n            \"Foam Tool Cutouts\",\n            \"Parts Trays\"\n        ],\n        dimensions: {\n            external: {\n                length: 38.1,\n                width: 30.5,\n                height: 16.5,\n                unit: \"cm\"\n            },\n            internal: {\n                length: 33.5,\n                width: 25.4,\n                height: 12.7,\n                unit: \"cm\"\n            }\n        },\n        weight: {\n            value: 1.7,\n            unit: \"kg\"\n        },\n        volume: {\n            value: 3.2,\n            unit: \"L\"\n        },\n        protectionRating: \"IP65\",\n        temperatureRange: {\n            min: -29,\n            max: 49,\n            unit: \"C\"\n        },\n        featured: false,\n        active: true,\n        seoTitle: \"NANUK 915 Tool Case - Professional Tool Storage\",\n        seoDescription: \"Organized NANUK 915 tool case with compartments for professional tool storage and protection.\",\n        seoKeywords: [\n            \"tool case\",\n            \"tool storage\",\n            \"professional tools\",\n            \"organized case\",\n            \"tool protection\"\n        ],\n        sortOrder: 4\n    },\n    {\n        name: \"NANUK 925 Custom Case\",\n        slug: \"nanuk-925-custom-case\",\n        category: \"Custom Cases\",\n        subcategory: \"Bespoke Solutions\",\n        description: \"Fully customizable case solution designed to meet specific equipment protection requirements.\",\n        longDescription: \"The NANUK 925 Custom Case represents the pinnacle of personalized protection. Every aspect can be tailored to your exact specifications, ensuring perfect fit and maximum protection for your unique equipment.\",\n        images: [\n            \"/images/products/nanuk-925-1.jpg\",\n            \"/images/products/nanuk-925-2.jpg\",\n            \"/images/products/nanuk-925-3.jpg\"\n        ],\n        specifications: {\n            \"External Dimensions\": \"Customizable\",\n            \"Internal Dimensions\": \"Customizable\",\n            \"Weight\": \"Varies by configuration\",\n            \"Volume\": \"Customizable\",\n            \"Material\": \"NK-7 Resin\",\n            \"Protection Rating\": \"Up to IP68\",\n            \"Temperature Range\": \"-40\\xb0F to +140\\xb0F (-40\\xb0C to +60\\xb0C)\",\n            \"Customization\": \"Full custom foam, colors, hardware\"\n        },\n        features: [\n            \"Fully customizable design\",\n            \"Precision foam cutting\",\n            \"Custom color options\",\n            \"Specialized hardware\",\n            \"Logo and branding options\",\n            \"Multiple latch configurations\",\n            \"Custom handle options\",\n            \"Tailored protection solutions\"\n        ],\n        applications: [\n            \"Specialized Equipment\",\n            \"Prototype Protection\",\n            \"Custom Instruments\",\n            \"Unique Configurations\",\n            \"Brand-Specific Solutions\",\n            \"OEM Applications\"\n        ],\n        certifications: [\n            \"Custom Certification Available\",\n            \"Client-Specific Standards\",\n            \"Industry Compliance\"\n        ],\n        colors: [\n            {\n                name: \"Custom Colors Available\",\n                code: \"#6B7280\"\n            }\n        ],\n        accessories: [\n            \"Custom Foam Solutions\",\n            \"Branded Hardware\",\n            \"Specialized Inserts\",\n            \"Custom Accessories\"\n        ],\n        dimensions: {\n            external: {\n                length: 0,\n                width: 0,\n                height: 0,\n                unit: \"cm\"\n            },\n            internal: {\n                length: 0,\n                width: 0,\n                height: 0,\n                unit: \"cm\"\n            }\n        },\n        weight: {\n            value: 0,\n            unit: \"kg\"\n        },\n        volume: {\n            value: 0,\n            unit: \"L\"\n        },\n        protectionRating: \"Custom\",\n        temperatureRange: {\n            min: -40,\n            max: 60,\n            unit: \"C\"\n        },\n        featured: true,\n        active: true,\n        seoTitle: \"NANUK 925 Custom Case - Bespoke Protection Solutions\",\n        seoDescription: \"Fully customizable NANUK 925 case with precision foam cutting and custom design options for specialized equipment.\",\n        seoKeywords: [\n            \"custom case\",\n            \"bespoke protection\",\n            \"custom foam\",\n            \"specialized case\",\n            \"tailored solution\"\n        ],\n        sortOrder: 5\n    },\n    {\n        name: \"NANUK 940 Wheeled Case\",\n        slug: \"nanuk-940-wheeled-case\",\n        category: \"Large Cases\",\n        subcategory: \"Wheeled Cases\",\n        description: \"Large wheeled case for easy transport of heavy equipment with maximum protection.\",\n        longDescription: \"The NANUK 940 combines the ultimate in protection with convenient mobility. Its robust wheel system and telescoping handle make transporting heavy, valuable equipment effortless.\",\n        images: [\n            \"/images/products/nanuk-940-1.jpg\",\n            \"/images/products/nanuk-940-2.jpg\"\n        ],\n        specifications: {\n            \"External Dimensions\": '22.0\" \\xd7 17.5\" \\xd7 10.0\" (55.9 \\xd7 44.5 \\xd7 25.4 cm)',\n            \"Internal Dimensions\": '20.0\" \\xd7 15.5\" \\xd7 8.5\" (50.8 \\xd7 39.4 \\xd7 21.6 cm)',\n            \"Weight\": \"12.5 lbs (5.7 kg)\",\n            \"Volume\": \"12.8 L\",\n            \"Material\": \"NK-7 Resin\",\n            \"Protection Rating\": \"IP67\",\n            \"Wheels\": \"Heavy-duty polyurethane\",\n            \"Handle\": \"Telescoping aluminum\"\n        },\n        features: [\n            \"Heavy-duty wheel system\",\n            \"Telescoping handle\",\n            \"Waterproof and dustproof (IP67)\",\n            \"Impact resistant construction\",\n            \"PowerClaw latching system\",\n            \"Reinforced corners\",\n            \"Pressure relief valve\",\n            \"Comfortable grip handles\"\n        ],\n        applications: [\n            \"Broadcast Equipment\",\n            \"Large Instruments\",\n            \"Trade Show Equipment\",\n            \"Mobile Workstations\",\n            \"Heavy Tools\",\n            \"Presentation Equipment\"\n        ],\n        certifications: [\n            \"IP67 Waterproof Rating\",\n            \"IATA Compliant\",\n            \"ATA 300\"\n        ],\n        colors: [\n            {\n                name: \"Black\",\n                code: \"#000000\"\n            }\n        ],\n        accessories: [\n            \"Foam Insert System\",\n            \"Divider Kit\",\n            \"TSA Locks\",\n            \"Handle Wrap\"\n        ],\n        dimensions: {\n            external: {\n                length: 55.9,\n                width: 44.5,\n                height: 25.4,\n                unit: \"cm\"\n            },\n            internal: {\n                length: 50.8,\n                width: 39.4,\n                height: 21.6,\n                unit: \"cm\"\n            }\n        },\n        weight: {\n            value: 5.7,\n            unit: \"kg\"\n        },\n        volume: {\n            value: 12.8,\n            unit: \"L\"\n        },\n        protectionRating: \"IP67\",\n        temperatureRange: {\n            min: -40,\n            max: 60,\n            unit: \"C\"\n        },\n        featured: false,\n        active: true,\n        seoTitle: \"NANUK 940 Wheeled Case - Mobile Protection Solution\",\n        seoDescription: \"Large wheeled NANUK 940 case with telescoping handle for easy transport of heavy equipment.\",\n        seoKeywords: [\n            \"wheeled case\",\n            \"mobile case\",\n            \"transport case\",\n            \"heavy equipment\",\n            \"travel case\"\n        ],\n        sortOrder: 6\n    }\n];\n// 【重点】示例分类数据 - 产品分类的基础数据结构\n// 定义了不同类型的保护箱分类，用于产品组织和导航\nconst sampleCategories = [\n    {\n        name: \"Small Cases\",\n        slug: \"small-cases\",\n        description: \"Compact protective cases for handheld equipment and small devices\",\n        active: true,\n        sortOrder: 1,\n        seoTitle: \"Small Protective Cases - Compact Equipment Protection\",\n        seoDescription: \"Small protective cases perfect for cameras, electronics, and handheld equipment protection.\" // SEO描述\n    },\n    {\n        name: \"Medium Cases\",\n        slug: \"medium-cases\",\n        description: \"Medium-sized cases for professional equipment and instruments\",\n        active: true,\n        sortOrder: 2,\n        seoTitle: \"Medium Protective Cases - Professional Equipment Storage\",\n        seoDescription: \"Medium protective cases ideal for professional cameras, drones, and scientific instruments.\" // SEO描述\n    },\n    {\n        name: \"Large Cases\",\n        slug: \"large-cases\",\n        description: \"Large cases for heavy-duty equipment and multiple items\",\n        active: true,\n        sortOrder: 3,\n        seoTitle: \"Large Protective Cases - Heavy Duty Equipment Protection\",\n        seoDescription: \"Large protective cases for heavy equipment, broadcast gear, and industrial instruments.\" // SEO描述\n    },\n    {\n        name: \"Tool Cases\",\n        slug: \"tool-cases\",\n        description: \"Specialized cases designed for tool organization and protection\",\n        active: true,\n        sortOrder: 4,\n        seoTitle: \"Tool Cases - Professional Tool Storage Solutions\",\n        seoDescription: \"Organized tool cases with compartments for professional tool storage and protection.\" // SEO描述\n    },\n    {\n        name: \"Custom Cases\",\n        slug: \"custom-cases\",\n        description: \"Fully customizable cases tailored to specific requirements\",\n        active: true,\n        sortOrder: 5,\n        seoTitle: \"Custom Protective Cases - Bespoke Protection Solutions\",\n        seoDescription: \"Custom protective cases designed to your exact specifications with precision foam cutting.\" // SEO描述\n    }\n];\n// 【重点】数据库种子函数 - 初始化数据库并插入示例数据\n// 用于在空数据库中创建初始的产品和分类数据，便于开发和测试\nasync function seedDatabase() {\n    try {\n        console.log(\"\\uD83C\\uDF31 Starting database seeding...\");\n        // 【重点】初始化数据库并创建索引 - 确保数据库结构正确\n        // 调用 initializeDatabase 函数创建必要的索引以提高查询性能\n        await (0,_mongodb__WEBPACK_IMPORTED_MODULE_0__.initializeDatabase)();\n        // 获取数据库连接实例\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_0__.getDatabase)();\n        // 【重点】清理现有数据 - 避免重复数据和冲突\n        // 删除产品集合中的所有现有数据，确保干净的起始状态\n        await db.collection(_mongodb__WEBPACK_IMPORTED_MODULE_0__.COLLECTIONS.PRODUCTS).deleteMany({});\n        console.log(\"\\uD83D\\uDDD1️  Cleared existing products\");\n        // 【重点】为分类数据添加时间戳 - 数据完整性要求\n        // 为每个分类添加创建时间和更新时间，符合数据模型要求\n        const categoriesWithTimestamps = sampleCategories.map((category)=>({\n                ...category,\n                createdAt: new Date(),\n                updatedAt: new Date() // 更新时间\n            }));\n        // 【重点】为产品数据添加时间戳 - 数据完整性要求\n        // 为每个产品添加创建时间和更新时间，符合数据模型要求\n        const productsWithTimestamps = sampleProducts.map((product)=>({\n                ...product,\n                createdAt: new Date(),\n                updatedAt: new Date() // 更新时间\n            }));\n        // 【重点】批量插入产品数据 - 高效的数据插入操作\n        // 使用 insertMany 进行批量插入，比逐个插入更高效\n        const productResult = await db.collection(_mongodb__WEBPACK_IMPORTED_MODULE_0__.COLLECTIONS.PRODUCTS).insertMany(productsWithTimestamps);\n        console.log(`✅ Inserted ${productResult.insertedCount} products`);\n        console.log(\"\\uD83C\\uDF89 Database seeding completed successfully!\");\n    } catch (error) {\n        // 【重点】错误处理 - 记录详细错误信息并重新抛出\n        // 确保调用者能够捕获和处理种子数据失败的情况\n        console.error(\"❌ Database seeding failed:\", error);\n        throw error // 重新抛出错误，让调用者处理\n        ;\n    }\n}\n// 【重点】智能种子数据检查函数 - 避免重复种子和数据冲突\n// 检查数据库是否为空，只在需要时进行种子数据操作\nasync function checkAndSeedDatabase() {\n    try {\n        // 获取数据库连接实例\n        const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_0__.getDatabase)();\n        // 【重点】检查产品数量 - 判断是否需要种子数据\n        // 统计产品集合中的文档数量，用于判断数据库状态\n        const productCount = await db.collection(_mongodb__WEBPACK_IMPORTED_MODULE_0__.COLLECTIONS.PRODUCTS).countDocuments();\n        // 【重点】条件种子逻辑 - 只在数据库为空时执行种子操作\n        if (productCount === 0) {\n            console.log(\"\\uD83D\\uDCE6 Database is empty, seeding with sample data...\");\n            await seedDatabase() // 执行种子数据插入\n            ;\n        } else {\n            // 数据库已有数据，跳过种子操作\n            console.log(`📊 Database already contains ${productCount} products`);\n        }\n    } catch (error) {\n        // 【重点】错误处理 - 记录检查失败但不中断应用启动\n        // 即使种子数据检查失败，也不应该阻止应用正常启动\n        console.error(\"❌ Database seeding check failed:\", error);\n    // 注意：这里不抛出错误，避免影响应用启动\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/seed-data.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=E%3A%5Cnanuk%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cnanuk&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();